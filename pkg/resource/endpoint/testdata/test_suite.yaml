tests:
  - name: "Endpoint create tests"
    description: "Testing create operation"
    scenarios:
      - name: "Create=InvalidInput"
        description: "Given one of the parameters is invalid, ko.Status shows a terminal condition"
        given:
          desired_state: "v1alpha1/create/desired/invalid_before_create.yaml"
          svc_api:
            - operation: CreateEndpointWithContext
              error:
                code: InvalidParameterValue
                message: "The endpoint name must start with an alphanumeric character."
        invoke: Create
        expect:
          latest_state: "v1alpha1/create/observed/invalid_create_attempted.yaml"
          error: resource is in terminal condition
      - name: "Create=Valid"
        description: "Create a new endpoint successfully (ARN in status, endpointStatus: InProgress)."
        given:
          desired_state: "v1alpha1/create/desired/success_before_create.yaml"
          svc_api:
            - operation: CreateEndpointWithContext
              output_fixture: "sdkapi/create/create_success.json"
        invoke: Create
        expect:
          latest_state: "v1alpha1/create/observed/success_after_create.yaml"
          error: nil
  - name: "Endpoint readOne tests"
    description: "Testing the readOne operation"
    scenarios:
      - name: "ReadOne=MissingRequiredField"
        description: "Testing readOne when required field is missing. No API call is made and returns error."
        given: 
          desired_state: "v1alpha1/readone/desired/missing_required_field.yaml"
        invoke: ReadOne
        expect:
          error: "resource not found"
      - name: "ReadOne=NotFound"
        description: "Testing readOne when Describe fails to find the resource on SageMaker"
        given: 
          desired_state: "v1alpha1/readone/desired/right_after_create.yaml"
          svc_api:
            - operation: DescribeEndpointWithContext
              error:
                code: ValidationException
                message: "Could not find endpoint xgboost-endpoint"
        invoke: ReadOne
        expect:
          error: "resource not found"
      - name: "ReadOne=Fail"
        description: "This test checks if the condition is updated if describe fails and readOne returns error"
        given: 
          desired_state: "v1alpha1/readone/desired/right_after_create.yaml"
          svc_api:
            - operation: DescribeEndpointWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/error_on_describe.yaml"
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
      - name: "ReadOne=AfterCreate"
        description: "Testing readOne right after create, the status should be in Creating with resource synced being false."
        given:
          desired_state: "v1alpha1/readone/desired/right_after_create.yaml"
          svc_api:
            - operation: DescribeEndpointWithContext
              output_fixture: "sdkapi/describe/creating_after_create.json"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/creating_after_describe.yaml"
      - name: "ReadOne=InService"
        description: "Testing readOne when InService, resource synced should be true."
        given: 
          desired_state: "v1alpha1/readone/observed/creating_after_describe.yaml"
          svc_api:
            - operation: DescribeEndpointWithContext
              output_fixture: "sdkapi/describe/inservice_no_failure_reason.json"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/inservice_no_failure_after_describe.yaml"
      - name: "ReadOne=AfterUpdate"
        description: "Testing readOne after update, the status should be in Updating with resource synced being false."
        given:
          desired_state: "v1alpha1/readone/desired/after_update_apicall_success.yaml"
          svc_api:
            - operation: DescribeEndpointWithContext
              output_fixture: "sdkapi/describe/updating.json"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/updating_on_describe.yaml"
      - name: "ReadOne=FailedStatus"
        description: "Testing how readOne handles the Failed Status, it should set a terminal condition."
        given: 
          desired_state: "v1alpha1/readone/desired/failed_right_after_create.yaml"
          svc_api:
            - operation: DescribeEndpointWithContext
              output_fixture: "sdkapi/describe/failed_after_create.json"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/failed_status_on_describe.yaml"
  - name: "Endpoint update tests"
    description: "Testing the Update operation"
    scenarios:
      - name: "Update=StatusUpdating"
        description: "This test checks if the Endpoint requeues while in Updating state."
        given:
          desired_state: "v1alpha1/update/desired/update_common.yaml"
          latest_state: "v1alpha1/update/desired/latest_updating.yaml"
        invoke: Update
        expect:
          error: "Endpoint in Updating state cannot be modified or deleted."
      - name: "Update=StatusFailed"
        description: "Testing update is blocked if endpoint is in Failed status and terminal condition is set"
        given:
          desired_state: "v1alpha1/update/desired/update_common.yaml"
          latest_state: "v1alpha1/update/desired/latest_failed.yaml"
        invoke: Update
        expect:
          latest_state: "v1alpha1/update/observed/no_update_on_failed.yaml"
          error: "resource is in terminal condition"
      - name: "Update=NoRetryIfSameEndpointConfigName"
        description: "Testing update is blocked if an update failed previously with same endpointConfigName"
        given:
          desired_state: "v1alpha1/update/desired/inservice_post_update_fail.yaml"
          latest_state: "v1alpha1/update/desired/latest_update_failed_with_reason.yaml"
        invoke: Update
        expect:
          latest_state: "v1alpha1/update/observed/no_retry_on_failed_update.yaml"
          error: "resource is in terminal condition"
      - name: "Update=Fail"
        description: "This test checks if the recoverable condition is updated if update fails and returns error"
        given:
          desired_state: "v1alpha1/update/desired/update_common.yaml"
          latest_state: "v1alpha1/update/desired/latest_inservice_pre_update.yaml"
          svc_api:
            - operation: UpdateEndpointWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: Update
        expect:
          latest_state: "v1alpha1/update/observed/error_on_update.yaml"
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
      - name: "Update=InService"
        description: "This test checks if update Endpoint is called and lastEndpointConfigNameForUpdate is set"
        given:
          desired_state: "v1alpha1/update/desired/update_common.yaml"
          latest_state: "v1alpha1/update/desired/latest_inservice_pre_update.yaml"
          svc_api:
            - operation: UpdateEndpointWithContext
              output_fixture: "sdkapi/update/update_success.json"
        invoke: Update
        expect:
          latest_state: "v1alpha1/update/observed/update_attempted_success.yaml"
  - name: "Endpoint delete tests"
    description: "Testing the delete operation"
    scenarios:
      - name: "Delete=RequeueOnCreating"
        description: "This test checks if the controller requeues if endpoint is in creating status"
        given:
          desired_state: "v1alpha1/delete/desired/creating_before_delete.yaml"
        invoke: Delete
        expect:
          error: "Endpoint in Creating state cannot be modified or deleted."
      - name: "Delete=Fail"
        description: "This test checks if the condition is updated if delete fails and returns error"
        given:
          desired_state: "v1alpha1/delete/desired/inservice_before_delete.yaml"
          svc_api:
            - operation: DeleteEndpointWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: Delete
        expect:
          # TODO: why do we not have onError and onSuccess for sdkDelete?
          # latest_state: "v1alpha1/delete/observed/error_on_delete.yaml"
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
      - name: "Delete=Successful"
        description: "This test checks if the Endpoint is deleted successfully if its InService"
        given:
          desired_state: "v1alpha1/delete/desired/inservice_before_delete.yaml"
          svc_api:
            - operation: DeleteEndpointWithContext
        invoke: Delete
        expect:
          error: nil
      # TODO: add test for wait until deleted. Feature to be implemented in a separate PR