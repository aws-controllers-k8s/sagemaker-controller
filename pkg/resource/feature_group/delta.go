// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package feature_group

import (
	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}
	customSetDefaults(a, b)

	if ackcompare.HasNilDifference(a.ko.Spec.Description, b.ko.Spec.Description) {
		delta.Add("Spec.Description", a.ko.Spec.Description, b.ko.Spec.Description)
	} else if a.ko.Spec.Description != nil && b.ko.Spec.Description != nil {
		if *a.ko.Spec.Description != *b.ko.Spec.Description {
			delta.Add("Spec.Description", a.ko.Spec.Description, b.ko.Spec.Description)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.EventTimeFeatureName, b.ko.Spec.EventTimeFeatureName) {
		delta.Add("Spec.EventTimeFeatureName", a.ko.Spec.EventTimeFeatureName, b.ko.Spec.EventTimeFeatureName)
	} else if a.ko.Spec.EventTimeFeatureName != nil && b.ko.Spec.EventTimeFeatureName != nil {
		if *a.ko.Spec.EventTimeFeatureName != *b.ko.Spec.EventTimeFeatureName {
			delta.Add("Spec.EventTimeFeatureName", a.ko.Spec.EventTimeFeatureName, b.ko.Spec.EventTimeFeatureName)
		}
	}

	if ackcompare.HasNilDifference(a.ko.Spec.FeatureGroupName, b.ko.Spec.FeatureGroupName) {
		delta.Add("Spec.FeatureGroupName", a.ko.Spec.FeatureGroupName, b.ko.Spec.FeatureGroupName)
	} else if a.ko.Spec.FeatureGroupName != nil && b.ko.Spec.FeatureGroupName != nil {
		if *a.ko.Spec.FeatureGroupName != *b.ko.Spec.FeatureGroupName {
			delta.Add("Spec.FeatureGroupName", a.ko.Spec.FeatureGroupName, b.ko.Spec.FeatureGroupName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig, b.ko.Spec.OfflineStoreConfig) {
		delta.Add("Spec.OfflineStoreConfig", a.ko.Spec.OfflineStoreConfig, b.ko.Spec.OfflineStoreConfig)
	} else if a.ko.Spec.OfflineStoreConfig != nil && b.ko.Spec.OfflineStoreConfig != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.DataCatalogConfig, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig) {
			delta.Add("Spec.OfflineStoreConfig.DataCatalogConfig", a.ko.Spec.OfflineStoreConfig.DataCatalogConfig, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig)
		} else if a.ko.Spec.OfflineStoreConfig.DataCatalogConfig != nil && b.ko.Spec.OfflineStoreConfig.DataCatalogConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog) {
				delta.Add("Spec.OfflineStoreConfig.DataCatalogConfig.Catalog", a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog)
			} else if a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog != nil && b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog != nil {
				if *a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog != *b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog {
					delta.Add("Spec.OfflineStoreConfig.DataCatalogConfig.Catalog", a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Catalog)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database) {
				delta.Add("Spec.OfflineStoreConfig.DataCatalogConfig.Database", a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database)
			} else if a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database != nil && b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database != nil {
				if *a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database != *b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database {
					delta.Add("Spec.OfflineStoreConfig.DataCatalogConfig.Database", a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.Database)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName) {
				delta.Add("Spec.OfflineStoreConfig.DataCatalogConfig.TableName", a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName)
			} else if a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName != nil && b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName != nil {
				if *a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName != *b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName {
					delta.Add("Spec.OfflineStoreConfig.DataCatalogConfig.TableName", a.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName, b.ko.Spec.OfflineStoreConfig.DataCatalogConfig.TableName)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation, b.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation) {
			delta.Add("Spec.OfflineStoreConfig.DisableGlueTableCreation", a.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation, b.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation)
		} else if a.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation != nil && b.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation != nil {
			if *a.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation != *b.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation {
				delta.Add("Spec.OfflineStoreConfig.DisableGlueTableCreation", a.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation, b.ko.Spec.OfflineStoreConfig.DisableGlueTableCreation)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.S3StorageConfig, b.ko.Spec.OfflineStoreConfig.S3StorageConfig) {
			delta.Add("Spec.OfflineStoreConfig.S3StorageConfig", a.ko.Spec.OfflineStoreConfig.S3StorageConfig, b.ko.Spec.OfflineStoreConfig.S3StorageConfig)
		} else if a.ko.Spec.OfflineStoreConfig.S3StorageConfig != nil && b.ko.Spec.OfflineStoreConfig.S3StorageConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID) {
				delta.Add("Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID", a.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID)
			} else if a.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID != nil && b.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID != nil {
				if *a.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID != *b.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID {
					delta.Add("Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID", a.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.KMSKeyID)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI) {
				delta.Add("Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI", a.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI)
			} else if a.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI != nil && b.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI != nil {
				if *a.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI != *b.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI {
					delta.Add("Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI", a.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.ResolvedOutputS3URI)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI) {
				delta.Add("Spec.OfflineStoreConfig.S3StorageConfig.S3URI", a.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI)
			} else if a.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI != nil && b.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI != nil {
				if *a.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI != *b.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI {
					delta.Add("Spec.OfflineStoreConfig.S3StorageConfig.S3URI", a.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI, b.ko.Spec.OfflineStoreConfig.S3StorageConfig.S3URI)
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.OnlineStoreConfig, b.ko.Spec.OnlineStoreConfig) {
		delta.Add("Spec.OnlineStoreConfig", a.ko.Spec.OnlineStoreConfig, b.ko.Spec.OnlineStoreConfig)
	} else if a.ko.Spec.OnlineStoreConfig != nil && b.ko.Spec.OnlineStoreConfig != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.OnlineStoreConfig.EnableOnlineStore, b.ko.Spec.OnlineStoreConfig.EnableOnlineStore) {
			delta.Add("Spec.OnlineStoreConfig.EnableOnlineStore", a.ko.Spec.OnlineStoreConfig.EnableOnlineStore, b.ko.Spec.OnlineStoreConfig.EnableOnlineStore)
		} else if a.ko.Spec.OnlineStoreConfig.EnableOnlineStore != nil && b.ko.Spec.OnlineStoreConfig.EnableOnlineStore != nil {
			if *a.ko.Spec.OnlineStoreConfig.EnableOnlineStore != *b.ko.Spec.OnlineStoreConfig.EnableOnlineStore {
				delta.Add("Spec.OnlineStoreConfig.EnableOnlineStore", a.ko.Spec.OnlineStoreConfig.EnableOnlineStore, b.ko.Spec.OnlineStoreConfig.EnableOnlineStore)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OnlineStoreConfig.SecurityConfig, b.ko.Spec.OnlineStoreConfig.SecurityConfig) {
			delta.Add("Spec.OnlineStoreConfig.SecurityConfig", a.ko.Spec.OnlineStoreConfig.SecurityConfig, b.ko.Spec.OnlineStoreConfig.SecurityConfig)
		} else if a.ko.Spec.OnlineStoreConfig.SecurityConfig != nil && b.ko.Spec.OnlineStoreConfig.SecurityConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID, b.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID) {
				delta.Add("Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID", a.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID, b.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID)
			} else if a.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID != nil && b.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID != nil {
				if *a.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID != *b.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID {
					delta.Add("Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID", a.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID, b.ko.Spec.OnlineStoreConfig.SecurityConfig.KMSKeyID)
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.RecordIdentifierFeatureName, b.ko.Spec.RecordIdentifierFeatureName) {
		delta.Add("Spec.RecordIdentifierFeatureName", a.ko.Spec.RecordIdentifierFeatureName, b.ko.Spec.RecordIdentifierFeatureName)
	} else if a.ko.Spec.RecordIdentifierFeatureName != nil && b.ko.Spec.RecordIdentifierFeatureName != nil {
		if *a.ko.Spec.RecordIdentifierFeatureName != *b.ko.Spec.RecordIdentifierFeatureName {
			delta.Add("Spec.RecordIdentifierFeatureName", a.ko.Spec.RecordIdentifierFeatureName, b.ko.Spec.RecordIdentifierFeatureName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.RoleARN, b.ko.Spec.RoleARN) {
		delta.Add("Spec.RoleARN", a.ko.Spec.RoleARN, b.ko.Spec.RoleARN)
	} else if a.ko.Spec.RoleARN != nil && b.ko.Spec.RoleARN != nil {
		if *a.ko.Spec.RoleARN != *b.ko.Spec.RoleARN {
			delta.Add("Spec.RoleARN", a.ko.Spec.RoleARN, b.ko.Spec.RoleARN)
		}
	}

	return delta
}
