tests:
  - name: "Notebook instance lifecycle config create tests"
    description: "Testing create operation"
    scenarios:
      - name: "Create=InvalidInput"
        description: "Given one of the parameters is invalid, ko.Status shows a terminal condition"
        given:
          desired_state: "v1alpha1/create/desired/invalid_before_create.yaml"
          svc_api:
            - operation: CreateNotebookInstanceLifecycleConfigWithContext
              error:
                code: InvalidParameterValue
                message: "The notebook instance lifecycle config name must not include a special character."
        invoke: Create
        expect:
          latest_state: "v1alpha1/create/observed/invalid_create_attempted.yaml"
          error: resource is in terminal condition
      - name: "Create=Valid"
        description: "Create a new notebook instance lifecycle config successfully (ARN in status)."
        given:
          desired_state: "v1alpha1/create/desired/success_before_create.yaml"
          svc_api:
            - operation: CreateNotebookInstanceLifecycleConfigWithContext
              output_fixture: "sdkapi/create/create_success.json"
        invoke: Create
        expect:
          latest_state: "v1alpha1/create/observed/success_after_create.yaml"
          error: nil
  - name: "Notebook instance lifecycle config readOne tests"
    description: "Testing the readOne operation"
    scenarios:
      - name: "ReadOne=MissingRequiredField"
        description: "Testing readOne when required field is missing. No API call is made and returns error."
        given: 
          desired_state: "v1alpha1/readone/desired/missing_required_field.yaml"
        invoke: ReadOne
        expect:
          error: "resource not found"
      - name: "ReadOne=SuccessClearsConditions"
        description: Testing a successful reconciliation clears conditions if terminal/recoverable condition were already set to true
        given:
          desired_state: "v1alpha1/readone/desired/error_conditions_true.yaml"
          svc_api:
            - operation: DescribeNotebookInstanceLifecycleConfigWithContext
              output_fixture: "sdkapi/describe/success_describe.json"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/conditions_clear_on_success.yaml"
      - name: "ReadOne=NotFound"
        description: "Testing readOne when Describe fails to find the resource on SageMaker"
        given: 
          desired_state: "v1alpha1/readone/desired/right_after_create.yaml"
          svc_api:
            - operation: DescribeNotebookInstanceLifecycleConfigWithContext
              error:
                code: ValidationException
                message: "Unable to describe Notebook Instance Lifecycle Config unit-testing-notebook-instance-lifecycle-config"
        invoke: ReadOne
        expect:
          error: "resource not found"
      - name: "ReadOne=Fail"
        description: "This test checks if the condition is updated if describe fails and readOne returns error"
        given: 
          desired_state: "v1alpha1/readone/desired/right_after_create.yaml"
          svc_api:
            - operation: DescribeNotebookInstanceLifecycleConfigWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/error_on_describe.yaml"
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
      - name: "ReadOne=AfterCreate"
        description: "Testing readOne right after create"
        given:
          desired_state: "v1alpha1/readone/desired/right_after_create.yaml"
          svc_api:
            - operation: DescribeNotebookInstanceLifecycleConfigWithContext
              output_fixture: "sdkapi/describe/success_describe.json"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/creating_after_describe.yaml"
  - name: "Notebook instance lifecycle config update tests"
    description: "Testing the Update operation"
    scenarios:
      - name: "Update=StatusUpdating"
        description: "This test checks if the notebook instance lifecycle config requeues after Updating "
        given:
          desired_state: "v1alpha1/update/desired/update_common.yaml"
          latest_state: "v1alpha1/update/desired/update_common.yaml"
          svc_api:
            - operation: UpdateNotebookInstanceLifecycleConfigWithContext
        invoke: Update
        expect:
          latest_state: "v1alpha1/update/observed/update_attempted_success.yaml"
          error: NotebookInstanceLifecycleConfig is updating.
      - name: "Update=Fail"
        description: "This test checks if the recoverable condition is updated if update fails and returns error"
        given:
          desired_state: "v1alpha1/update/desired/update_common.yaml"
          latest_state: "v1alpha1/readone/desired/right_after_create.yaml"
          svc_api:
            - operation: UpdateNotebookInstanceLifecycleConfigWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: Update
        expect:
          latest_state: "v1alpha1/update/observed/error_on_update.yaml"
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
  - name: "Notebook instance lifecycle config delete tests"
    description: "Testing the delete operation"
    scenarios:
      - name: "Delete=Fail"
        description: "This test checks if the condition is updated if delete fails and returns error"
        given:
          desired_state: "v1alpha1/delete/desired/inservice_before_delete.yaml"
          svc_api:
            - operation: DeleteNotebookInstanceLifecycleConfigWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: Delete
        expect:
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
      - name: "Delete=Successful"
        description: "This test checks if the notebook instance lifecycle config is deleted successfully"
        given:
          desired_state: "v1alpha1/delete/desired/inservice_before_delete.yaml"
          svc_api:
            - operation: DeleteNotebookInstanceLifecycleConfigWithContext
        invoke: Delete
        expect:
          error: nil