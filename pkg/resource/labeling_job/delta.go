// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package labeling_job

import (
	"bytes"
	"reflect"

	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
	acktags "github.com/aws-controllers-k8s/runtime/pkg/tags"
)

// Hack to avoid import errors during build...
var (
	_ = &bytes.Buffer{}
	_ = &reflect.Method{}
	_ = &acktags.Tags{}
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}
	customSetDefaults(a, b)

	if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig, b.ko.Spec.HumanTaskConfig) {
		delta.Add("Spec.HumanTaskConfig", a.ko.Spec.HumanTaskConfig, b.ko.Spec.HumanTaskConfig)
	} else if a.ko.Spec.HumanTaskConfig != nil && b.ko.Spec.HumanTaskConfig != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig, b.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig) {
			delta.Add("Spec.HumanTaskConfig.AnnotationConsolidationConfig", a.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig, b.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig)
		} else if a.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig != nil && b.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN, b.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN) {
				delta.Add("Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN", a.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN, b.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN)
			} else if a.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN != nil && b.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN != nil {
				if *a.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN != *b.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN {
					delta.Add("Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN", a.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN, b.ko.Spec.HumanTaskConfig.AnnotationConsolidationConfig.AnnotationConsolidationLambdaARN)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount, b.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount) {
			delta.Add("Spec.HumanTaskConfig.MaxConcurrentTaskCount", a.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount, b.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount)
		} else if a.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount != nil && b.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount != nil {
			if *a.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount != *b.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount {
				delta.Add("Spec.HumanTaskConfig.MaxConcurrentTaskCount", a.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount, b.ko.Spec.HumanTaskConfig.MaxConcurrentTaskCount)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject, b.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject) {
			delta.Add("Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject", a.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject, b.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject)
		} else if a.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject != nil && b.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject != nil {
			if *a.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject != *b.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject {
				delta.Add("Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject", a.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject, b.ko.Spec.HumanTaskConfig.NumberOfHumanWorkersPerDataObject)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN, b.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN) {
			delta.Add("Spec.HumanTaskConfig.PreHumanTaskLambdaARN", a.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN, b.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN)
		} else if a.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN != nil && b.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN != nil {
			if *a.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN != *b.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN {
				delta.Add("Spec.HumanTaskConfig.PreHumanTaskLambdaARN", a.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN, b.ko.Spec.HumanTaskConfig.PreHumanTaskLambdaARN)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice) {
			delta.Add("Spec.HumanTaskConfig.PublicWorkforceTaskPrice", a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice)
		} else if a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice != nil && b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd) {
				delta.Add("Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd", a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd)
			} else if a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd != nil && b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents) {
					delta.Add("Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents", a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents)
				} else if a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents != nil && b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents != nil {
					if *a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents != *b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents {
						delta.Add("Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents", a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Cents)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars) {
					delta.Add("Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars", a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars)
				} else if a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars != nil && b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars != nil {
					if *a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars != *b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars {
						delta.Add("Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars", a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.Dollars)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent) {
					delta.Add("Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent", a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent)
				} else if a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent != nil && b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent != nil {
					if *a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent != *b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent {
						delta.Add("Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent", a.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent, b.ko.Spec.HumanTaskConfig.PublicWorkforceTaskPrice.AmountInUsd.TenthFractionsOfACent)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds, b.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds) {
			delta.Add("Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds", a.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds, b.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds)
		} else if a.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds != nil && b.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds != nil {
			if *a.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds != *b.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds {
				delta.Add("Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds", a.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds, b.ko.Spec.HumanTaskConfig.TaskAvailabilityLifetimeInSeconds)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.TaskDescription, b.ko.Spec.HumanTaskConfig.TaskDescription) {
			delta.Add("Spec.HumanTaskConfig.TaskDescription", a.ko.Spec.HumanTaskConfig.TaskDescription, b.ko.Spec.HumanTaskConfig.TaskDescription)
		} else if a.ko.Spec.HumanTaskConfig.TaskDescription != nil && b.ko.Spec.HumanTaskConfig.TaskDescription != nil {
			if *a.ko.Spec.HumanTaskConfig.TaskDescription != *b.ko.Spec.HumanTaskConfig.TaskDescription {
				delta.Add("Spec.HumanTaskConfig.TaskDescription", a.ko.Spec.HumanTaskConfig.TaskDescription, b.ko.Spec.HumanTaskConfig.TaskDescription)
			}
		}
		if len(a.ko.Spec.HumanTaskConfig.TaskKeywords) != len(b.ko.Spec.HumanTaskConfig.TaskKeywords) {
			delta.Add("Spec.HumanTaskConfig.TaskKeywords", a.ko.Spec.HumanTaskConfig.TaskKeywords, b.ko.Spec.HumanTaskConfig.TaskKeywords)
		} else if len(a.ko.Spec.HumanTaskConfig.TaskKeywords) > 0 {
			if !ackcompare.SliceStringPEqual(a.ko.Spec.HumanTaskConfig.TaskKeywords, b.ko.Spec.HumanTaskConfig.TaskKeywords) {
				delta.Add("Spec.HumanTaskConfig.TaskKeywords", a.ko.Spec.HumanTaskConfig.TaskKeywords, b.ko.Spec.HumanTaskConfig.TaskKeywords)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds, b.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds) {
			delta.Add("Spec.HumanTaskConfig.TaskTimeLimitInSeconds", a.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds, b.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds)
		} else if a.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds != nil && b.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds != nil {
			if *a.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds != *b.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds {
				delta.Add("Spec.HumanTaskConfig.TaskTimeLimitInSeconds", a.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds, b.ko.Spec.HumanTaskConfig.TaskTimeLimitInSeconds)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.TaskTitle, b.ko.Spec.HumanTaskConfig.TaskTitle) {
			delta.Add("Spec.HumanTaskConfig.TaskTitle", a.ko.Spec.HumanTaskConfig.TaskTitle, b.ko.Spec.HumanTaskConfig.TaskTitle)
		} else if a.ko.Spec.HumanTaskConfig.TaskTitle != nil && b.ko.Spec.HumanTaskConfig.TaskTitle != nil {
			if *a.ko.Spec.HumanTaskConfig.TaskTitle != *b.ko.Spec.HumanTaskConfig.TaskTitle {
				delta.Add("Spec.HumanTaskConfig.TaskTitle", a.ko.Spec.HumanTaskConfig.TaskTitle, b.ko.Spec.HumanTaskConfig.TaskTitle)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.UiConfig, b.ko.Spec.HumanTaskConfig.UiConfig) {
			delta.Add("Spec.HumanTaskConfig.UiConfig", a.ko.Spec.HumanTaskConfig.UiConfig, b.ko.Spec.HumanTaskConfig.UiConfig)
		} else if a.ko.Spec.HumanTaskConfig.UiConfig != nil && b.ko.Spec.HumanTaskConfig.UiConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN, b.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN) {
				delta.Add("Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN", a.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN, b.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN)
			} else if a.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN != nil && b.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN != nil {
				if *a.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN != *b.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN {
					delta.Add("Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN", a.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN, b.ko.Spec.HumanTaskConfig.UiConfig.HumanTaskUiARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI, b.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI) {
				delta.Add("Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI", a.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI, b.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI)
			} else if a.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI != nil && b.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI != nil {
				if *a.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI != *b.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI {
					delta.Add("Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI", a.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI, b.ko.Spec.HumanTaskConfig.UiConfig.UiTemplateS3URI)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.HumanTaskConfig.WorkteamARN, b.ko.Spec.HumanTaskConfig.WorkteamARN) {
			delta.Add("Spec.HumanTaskConfig.WorkteamARN", a.ko.Spec.HumanTaskConfig.WorkteamARN, b.ko.Spec.HumanTaskConfig.WorkteamARN)
		} else if a.ko.Spec.HumanTaskConfig.WorkteamARN != nil && b.ko.Spec.HumanTaskConfig.WorkteamARN != nil {
			if *a.ko.Spec.HumanTaskConfig.WorkteamARN != *b.ko.Spec.HumanTaskConfig.WorkteamARN {
				delta.Add("Spec.HumanTaskConfig.WorkteamARN", a.ko.Spec.HumanTaskConfig.WorkteamARN, b.ko.Spec.HumanTaskConfig.WorkteamARN)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.InputConfig, b.ko.Spec.InputConfig) {
		delta.Add("Spec.InputConfig", a.ko.Spec.InputConfig, b.ko.Spec.InputConfig)
	} else if a.ko.Spec.InputConfig != nil && b.ko.Spec.InputConfig != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.InputConfig.DataAttributes, b.ko.Spec.InputConfig.DataAttributes) {
			delta.Add("Spec.InputConfig.DataAttributes", a.ko.Spec.InputConfig.DataAttributes, b.ko.Spec.InputConfig.DataAttributes)
		} else if a.ko.Spec.InputConfig.DataAttributes != nil && b.ko.Spec.InputConfig.DataAttributes != nil {
			if len(a.ko.Spec.InputConfig.DataAttributes.ContentClassifiers) != len(b.ko.Spec.InputConfig.DataAttributes.ContentClassifiers) {
				delta.Add("Spec.InputConfig.DataAttributes.ContentClassifiers", a.ko.Spec.InputConfig.DataAttributes.ContentClassifiers, b.ko.Spec.InputConfig.DataAttributes.ContentClassifiers)
			} else if len(a.ko.Spec.InputConfig.DataAttributes.ContentClassifiers) > 0 {
				if !ackcompare.SliceStringPEqual(a.ko.Spec.InputConfig.DataAttributes.ContentClassifiers, b.ko.Spec.InputConfig.DataAttributes.ContentClassifiers) {
					delta.Add("Spec.InputConfig.DataAttributes.ContentClassifiers", a.ko.Spec.InputConfig.DataAttributes.ContentClassifiers, b.ko.Spec.InputConfig.DataAttributes.ContentClassifiers)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.InputConfig.DataSource, b.ko.Spec.InputConfig.DataSource) {
			delta.Add("Spec.InputConfig.DataSource", a.ko.Spec.InputConfig.DataSource, b.ko.Spec.InputConfig.DataSource)
		} else if a.ko.Spec.InputConfig.DataSource != nil && b.ko.Spec.InputConfig.DataSource != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.InputConfig.DataSource.S3DataSource, b.ko.Spec.InputConfig.DataSource.S3DataSource) {
				delta.Add("Spec.InputConfig.DataSource.S3DataSource", a.ko.Spec.InputConfig.DataSource.S3DataSource, b.ko.Spec.InputConfig.DataSource.S3DataSource)
			} else if a.ko.Spec.InputConfig.DataSource.S3DataSource != nil && b.ko.Spec.InputConfig.DataSource.S3DataSource != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI, b.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI) {
					delta.Add("Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI", a.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI, b.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI)
				} else if a.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI != nil && b.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI != nil {
					if *a.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI != *b.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI {
						delta.Add("Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI", a.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI, b.ko.Spec.InputConfig.DataSource.S3DataSource.ManifestS3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.InputConfig.DataSource.SNSDataSource, b.ko.Spec.InputConfig.DataSource.SNSDataSource) {
				delta.Add("Spec.InputConfig.DataSource.SNSDataSource", a.ko.Spec.InputConfig.DataSource.SNSDataSource, b.ko.Spec.InputConfig.DataSource.SNSDataSource)
			} else if a.ko.Spec.InputConfig.DataSource.SNSDataSource != nil && b.ko.Spec.InputConfig.DataSource.SNSDataSource != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN, b.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN) {
					delta.Add("Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN", a.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN, b.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN)
				} else if a.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN != nil && b.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN != nil {
					if *a.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN != *b.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN {
						delta.Add("Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN", a.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN, b.ko.Spec.InputConfig.DataSource.SNSDataSource.SNSTopicARN)
					}
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.LabelAttributeName, b.ko.Spec.LabelAttributeName) {
		delta.Add("Spec.LabelAttributeName", a.ko.Spec.LabelAttributeName, b.ko.Spec.LabelAttributeName)
	} else if a.ko.Spec.LabelAttributeName != nil && b.ko.Spec.LabelAttributeName != nil {
		if *a.ko.Spec.LabelAttributeName != *b.ko.Spec.LabelAttributeName {
			delta.Add("Spec.LabelAttributeName", a.ko.Spec.LabelAttributeName, b.ko.Spec.LabelAttributeName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.LabelCategoryConfigS3URI, b.ko.Spec.LabelCategoryConfigS3URI) {
		delta.Add("Spec.LabelCategoryConfigS3URI", a.ko.Spec.LabelCategoryConfigS3URI, b.ko.Spec.LabelCategoryConfigS3URI)
	} else if a.ko.Spec.LabelCategoryConfigS3URI != nil && b.ko.Spec.LabelCategoryConfigS3URI != nil {
		if *a.ko.Spec.LabelCategoryConfigS3URI != *b.ko.Spec.LabelCategoryConfigS3URI {
			delta.Add("Spec.LabelCategoryConfigS3URI", a.ko.Spec.LabelCategoryConfigS3URI, b.ko.Spec.LabelCategoryConfigS3URI)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.LabelingJobAlgorithmsConfig, b.ko.Spec.LabelingJobAlgorithmsConfig) {
		delta.Add("Spec.LabelingJobAlgorithmsConfig", a.ko.Spec.LabelingJobAlgorithmsConfig, b.ko.Spec.LabelingJobAlgorithmsConfig)
	} else if a.ko.Spec.LabelingJobAlgorithmsConfig != nil && b.ko.Spec.LabelingJobAlgorithmsConfig != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN, b.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN) {
			delta.Add("Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN", a.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN, b.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN)
		} else if a.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN != nil && b.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN != nil {
			if *a.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN != *b.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN {
				delta.Add("Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN", a.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN, b.ko.Spec.LabelingJobAlgorithmsConfig.InitialActiveLearningModelARN)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN) {
			delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN)
		} else if a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN != nil && b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN != nil {
			if *a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN != *b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN {
				delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobAlgorithmSpecificationARN)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig) {
			delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig)
		} else if a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig != nil && b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID) {
				delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID)
			} else if a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID != nil && b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID != nil {
				if *a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID != *b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID {
					delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VolumeKMSKeyID)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig) {
				delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig)
			} else if a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig != nil && b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig != nil {
				if len(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs) != len(b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs) {
					delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs)
				} else if len(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs) > 0 {
					if !ackcompare.SliceStringPEqual(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs) {
						delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.SecurityGroupIDs)
					}
				}
				if len(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets) != len(b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets) {
					delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets)
				} else if len(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets) > 0 {
					if !ackcompare.SliceStringPEqual(a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets) {
						delta.Add("Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets", a.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets, b.ko.Spec.LabelingJobAlgorithmsConfig.LabelingJobResourceConfig.VPCConfig.Subnets)
					}
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.LabelingJobName, b.ko.Spec.LabelingJobName) {
		delta.Add("Spec.LabelingJobName", a.ko.Spec.LabelingJobName, b.ko.Spec.LabelingJobName)
	} else if a.ko.Spec.LabelingJobName != nil && b.ko.Spec.LabelingJobName != nil {
		if *a.ko.Spec.LabelingJobName != *b.ko.Spec.LabelingJobName {
			delta.Add("Spec.LabelingJobName", a.ko.Spec.LabelingJobName, b.ko.Spec.LabelingJobName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.OutputConfig, b.ko.Spec.OutputConfig) {
		delta.Add("Spec.OutputConfig", a.ko.Spec.OutputConfig, b.ko.Spec.OutputConfig)
	} else if a.ko.Spec.OutputConfig != nil && b.ko.Spec.OutputConfig != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.OutputConfig.KMSKeyID, b.ko.Spec.OutputConfig.KMSKeyID) {
			delta.Add("Spec.OutputConfig.KMSKeyID", a.ko.Spec.OutputConfig.KMSKeyID, b.ko.Spec.OutputConfig.KMSKeyID)
		} else if a.ko.Spec.OutputConfig.KMSKeyID != nil && b.ko.Spec.OutputConfig.KMSKeyID != nil {
			if *a.ko.Spec.OutputConfig.KMSKeyID != *b.ko.Spec.OutputConfig.KMSKeyID {
				delta.Add("Spec.OutputConfig.KMSKeyID", a.ko.Spec.OutputConfig.KMSKeyID, b.ko.Spec.OutputConfig.KMSKeyID)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OutputConfig.S3OutputPath, b.ko.Spec.OutputConfig.S3OutputPath) {
			delta.Add("Spec.OutputConfig.S3OutputPath", a.ko.Spec.OutputConfig.S3OutputPath, b.ko.Spec.OutputConfig.S3OutputPath)
		} else if a.ko.Spec.OutputConfig.S3OutputPath != nil && b.ko.Spec.OutputConfig.S3OutputPath != nil {
			if *a.ko.Spec.OutputConfig.S3OutputPath != *b.ko.Spec.OutputConfig.S3OutputPath {
				delta.Add("Spec.OutputConfig.S3OutputPath", a.ko.Spec.OutputConfig.S3OutputPath, b.ko.Spec.OutputConfig.S3OutputPath)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.OutputConfig.SNSTopicARN, b.ko.Spec.OutputConfig.SNSTopicARN) {
			delta.Add("Spec.OutputConfig.SNSTopicARN", a.ko.Spec.OutputConfig.SNSTopicARN, b.ko.Spec.OutputConfig.SNSTopicARN)
		} else if a.ko.Spec.OutputConfig.SNSTopicARN != nil && b.ko.Spec.OutputConfig.SNSTopicARN != nil {
			if *a.ko.Spec.OutputConfig.SNSTopicARN != *b.ko.Spec.OutputConfig.SNSTopicARN {
				delta.Add("Spec.OutputConfig.SNSTopicARN", a.ko.Spec.OutputConfig.SNSTopicARN, b.ko.Spec.OutputConfig.SNSTopicARN)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.RoleARN, b.ko.Spec.RoleARN) {
		delta.Add("Spec.RoleARN", a.ko.Spec.RoleARN, b.ko.Spec.RoleARN)
	} else if a.ko.Spec.RoleARN != nil && b.ko.Spec.RoleARN != nil {
		if *a.ko.Spec.RoleARN != *b.ko.Spec.RoleARN {
			delta.Add("Spec.RoleARN", a.ko.Spec.RoleARN, b.ko.Spec.RoleARN)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.StoppingConditions, b.ko.Spec.StoppingConditions) {
		delta.Add("Spec.StoppingConditions", a.ko.Spec.StoppingConditions, b.ko.Spec.StoppingConditions)
	} else if a.ko.Spec.StoppingConditions != nil && b.ko.Spec.StoppingConditions != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount, b.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount) {
			delta.Add("Spec.StoppingConditions.MaxHumanLabeledObjectCount", a.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount, b.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount)
		} else if a.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount != nil && b.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount != nil {
			if *a.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount != *b.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount {
				delta.Add("Spec.StoppingConditions.MaxHumanLabeledObjectCount", a.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount, b.ko.Spec.StoppingConditions.MaxHumanLabeledObjectCount)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled, b.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled) {
			delta.Add("Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled", a.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled, b.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled)
		} else if a.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled != nil && b.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled != nil {
			if *a.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled != *b.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled {
				delta.Add("Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled", a.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled, b.ko.Spec.StoppingConditions.MaxPercentageOfInputDatasetLabeled)
			}
		}
	}

	return delta
}
