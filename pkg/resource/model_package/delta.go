// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package model_package

import (
	"bytes"
	"reflect"

	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
	acktags "github.com/aws-controllers-k8s/runtime/pkg/tags"
)

// Hack to avoid import errors during build...
var (
	_ = &bytes.Buffer{}
	_ = &reflect.Method{}
	_ = &acktags.Tags{}
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}
	customSetDefaults(a, b)

	if len(a.ko.Spec.AdditionalInferenceSpecifications) != len(b.ko.Spec.AdditionalInferenceSpecifications) {
		delta.Add("Spec.AdditionalInferenceSpecifications", a.ko.Spec.AdditionalInferenceSpecifications, b.ko.Spec.AdditionalInferenceSpecifications)
	} else if len(a.ko.Spec.AdditionalInferenceSpecifications) > 0 {
		if !reflect.DeepEqual(a.ko.Spec.AdditionalInferenceSpecifications, b.ko.Spec.AdditionalInferenceSpecifications) {
			delta.Add("Spec.AdditionalInferenceSpecifications", a.ko.Spec.AdditionalInferenceSpecifications, b.ko.Spec.AdditionalInferenceSpecifications)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ApprovalDescription, b.ko.Spec.ApprovalDescription) {
		delta.Add("Spec.ApprovalDescription", a.ko.Spec.ApprovalDescription, b.ko.Spec.ApprovalDescription)
	} else if a.ko.Spec.ApprovalDescription != nil && b.ko.Spec.ApprovalDescription != nil {
		if *a.ko.Spec.ApprovalDescription != *b.ko.Spec.ApprovalDescription {
			delta.Add("Spec.ApprovalDescription", a.ko.Spec.ApprovalDescription, b.ko.Spec.ApprovalDescription)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.CertifyForMarketplace, b.ko.Spec.CertifyForMarketplace) {
		delta.Add("Spec.CertifyForMarketplace", a.ko.Spec.CertifyForMarketplace, b.ko.Spec.CertifyForMarketplace)
	} else if a.ko.Spec.CertifyForMarketplace != nil && b.ko.Spec.CertifyForMarketplace != nil {
		if *a.ko.Spec.CertifyForMarketplace != *b.ko.Spec.CertifyForMarketplace {
			delta.Add("Spec.CertifyForMarketplace", a.ko.Spec.CertifyForMarketplace, b.ko.Spec.CertifyForMarketplace)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ClientToken, b.ko.Spec.ClientToken) {
		delta.Add("Spec.ClientToken", a.ko.Spec.ClientToken, b.ko.Spec.ClientToken)
	} else if a.ko.Spec.ClientToken != nil && b.ko.Spec.ClientToken != nil {
		if *a.ko.Spec.ClientToken != *b.ko.Spec.ClientToken {
			delta.Add("Spec.ClientToken", a.ko.Spec.ClientToken, b.ko.Spec.ClientToken)
		}
	}
	if len(a.ko.Spec.CustomerMetadataProperties) != len(b.ko.Spec.CustomerMetadataProperties) {
		delta.Add("Spec.CustomerMetadataProperties", a.ko.Spec.CustomerMetadataProperties, b.ko.Spec.CustomerMetadataProperties)
	} else if len(a.ko.Spec.CustomerMetadataProperties) > 0 {
		if !ackcompare.MapStringStringPEqual(a.ko.Spec.CustomerMetadataProperties, b.ko.Spec.CustomerMetadataProperties) {
			delta.Add("Spec.CustomerMetadataProperties", a.ko.Spec.CustomerMetadataProperties, b.ko.Spec.CustomerMetadataProperties)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Domain, b.ko.Spec.Domain) {
		delta.Add("Spec.Domain", a.ko.Spec.Domain, b.ko.Spec.Domain)
	} else if a.ko.Spec.Domain != nil && b.ko.Spec.Domain != nil {
		if *a.ko.Spec.Domain != *b.ko.Spec.Domain {
			delta.Add("Spec.Domain", a.ko.Spec.Domain, b.ko.Spec.Domain)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines, b.ko.Spec.DriftCheckBaselines) {
		delta.Add("Spec.DriftCheckBaselines", a.ko.Spec.DriftCheckBaselines, b.ko.Spec.DriftCheckBaselines)
	} else if a.ko.Spec.DriftCheckBaselines != nil && b.ko.Spec.DriftCheckBaselines != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias, b.ko.Spec.DriftCheckBaselines.Bias) {
			delta.Add("Spec.DriftCheckBaselines.Bias", a.ko.Spec.DriftCheckBaselines.Bias, b.ko.Spec.DriftCheckBaselines.Bias)
		} else if a.ko.Spec.DriftCheckBaselines.Bias != nil && b.ko.Spec.DriftCheckBaselines.Bias != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile) {
				delta.Add("Spec.DriftCheckBaselines.Bias.ConfigFile", a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile)
			} else if a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile != nil && b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest", a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest != *b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest", a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType", a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType != nil && b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType != *b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType {
						delta.Add("Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType", a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI", a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI != nil && b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI != *b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI {
						delta.Add("Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI", a.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.ConfigFile.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints) {
				delta.Add("Spec.DriftCheckBaselines.Bias.PostTrainingConstraints", a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints)
			} else if a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints != nil && b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest != *b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType", a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType != nil && b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType != *b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType {
						delta.Add("Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType", a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI", a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI != nil && b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI != *b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI {
						delta.Add("Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI", a.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.PostTrainingConstraints.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints) {
				delta.Add("Spec.DriftCheckBaselines.Bias.PreTrainingConstraints", a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints)
			} else if a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints != nil && b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest != *b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType", a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType != nil && b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType != *b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType {
						delta.Add("Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType", a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI", a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI != nil && b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI != *b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI {
						delta.Add("Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI", a.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI, b.ko.Spec.DriftCheckBaselines.Bias.PreTrainingConstraints.S3URI)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability, b.ko.Spec.DriftCheckBaselines.Explainability) {
			delta.Add("Spec.DriftCheckBaselines.Explainability", a.ko.Spec.DriftCheckBaselines.Explainability, b.ko.Spec.DriftCheckBaselines.Explainability)
		} else if a.ko.Spec.DriftCheckBaselines.Explainability != nil && b.ko.Spec.DriftCheckBaselines.Explainability != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile) {
				delta.Add("Spec.DriftCheckBaselines.Explainability.ConfigFile", a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile)
			} else if a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile != nil && b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest", a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest != *b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest", a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType", a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType != nil && b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType != *b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType {
						delta.Add("Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType", a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI", a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI != nil && b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI != *b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI {
						delta.Add("Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI", a.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI, b.ko.Spec.DriftCheckBaselines.Explainability.ConfigFile.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability.Constraints, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints) {
				delta.Add("Spec.DriftCheckBaselines.Explainability.Constraints", a.ko.Spec.DriftCheckBaselines.Explainability.Constraints, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints)
			} else if a.ko.Spec.DriftCheckBaselines.Explainability.Constraints != nil && b.ko.Spec.DriftCheckBaselines.Explainability.Constraints != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest != *b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.Explainability.Constraints.ContentType", a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType != nil && b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType != *b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType {
						delta.Add("Spec.DriftCheckBaselines.Explainability.Constraints.ContentType", a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.Explainability.Constraints.S3URI", a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI != nil && b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI != *b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI {
						delta.Add("Spec.DriftCheckBaselines.Explainability.Constraints.S3URI", a.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.Explainability.Constraints.S3URI)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality, b.ko.Spec.DriftCheckBaselines.ModelDataQuality) {
			delta.Add("Spec.DriftCheckBaselines.ModelDataQuality", a.ko.Spec.DriftCheckBaselines.ModelDataQuality, b.ko.Spec.DriftCheckBaselines.ModelDataQuality)
		} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints) {
				delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Constraints", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints)
			} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest != *b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType != *b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType {
						delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI != *b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI {
						delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Constraints.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics) {
				delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Statistics", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics)
			} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest != *b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType != *b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType {
						delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI != nil && b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI != *b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI {
						delta.Add("Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI", a.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI, b.ko.Spec.DriftCheckBaselines.ModelDataQuality.Statistics.S3URI)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality, b.ko.Spec.DriftCheckBaselines.ModelQuality) {
			delta.Add("Spec.DriftCheckBaselines.ModelQuality", a.ko.Spec.DriftCheckBaselines.ModelQuality, b.ko.Spec.DriftCheckBaselines.ModelQuality)
		} else if a.ko.Spec.DriftCheckBaselines.ModelQuality != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints) {
				delta.Add("Spec.DriftCheckBaselines.ModelQuality.Constraints", a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints)
			} else if a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest != *b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest", a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType", a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType != *b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType {
						delta.Add("Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType", a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI", a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI != *b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI {
						delta.Add("Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI", a.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI, b.ko.Spec.DriftCheckBaselines.ModelQuality.Constraints.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics) {
				delta.Add("Spec.DriftCheckBaselines.ModelQuality.Statistics", a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics)
			} else if a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest) {
					delta.Add("Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest", a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest)
				} else if a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest != *b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest {
						delta.Add("Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest", a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType) {
					delta.Add("Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType", a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType)
				} else if a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType != *b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType {
						delta.Add("Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType", a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI) {
					delta.Add("Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI", a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI)
				} else if a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI != nil && b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI != nil {
					if *a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI != *b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI {
						delta.Add("Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI", a.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI, b.ko.Spec.DriftCheckBaselines.ModelQuality.Statistics.S3URI)
					}
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.InferenceSpecification, b.ko.Spec.InferenceSpecification) {
		delta.Add("Spec.InferenceSpecification", a.ko.Spec.InferenceSpecification, b.ko.Spec.InferenceSpecification)
	} else if a.ko.Spec.InferenceSpecification != nil && b.ko.Spec.InferenceSpecification != nil {
		if len(a.ko.Spec.InferenceSpecification.Containers) != len(b.ko.Spec.InferenceSpecification.Containers) {
			delta.Add("Spec.InferenceSpecification.Containers", a.ko.Spec.InferenceSpecification.Containers, b.ko.Spec.InferenceSpecification.Containers)
		} else if len(a.ko.Spec.InferenceSpecification.Containers) > 0 {
			if !reflect.DeepEqual(a.ko.Spec.InferenceSpecification.Containers, b.ko.Spec.InferenceSpecification.Containers) {
				delta.Add("Spec.InferenceSpecification.Containers", a.ko.Spec.InferenceSpecification.Containers, b.ko.Spec.InferenceSpecification.Containers)
			}
		}
		if len(a.ko.Spec.InferenceSpecification.SupportedContentTypes) != len(b.ko.Spec.InferenceSpecification.SupportedContentTypes) {
			delta.Add("Spec.InferenceSpecification.SupportedContentTypes", a.ko.Spec.InferenceSpecification.SupportedContentTypes, b.ko.Spec.InferenceSpecification.SupportedContentTypes)
		} else if len(a.ko.Spec.InferenceSpecification.SupportedContentTypes) > 0 {
			if !ackcompare.SliceStringPEqual(a.ko.Spec.InferenceSpecification.SupportedContentTypes, b.ko.Spec.InferenceSpecification.SupportedContentTypes) {
				delta.Add("Spec.InferenceSpecification.SupportedContentTypes", a.ko.Spec.InferenceSpecification.SupportedContentTypes, b.ko.Spec.InferenceSpecification.SupportedContentTypes)
			}
		}
		if len(a.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes) != len(b.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes) {
			delta.Add("Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes", a.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes, b.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes)
		} else if len(a.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes) > 0 {
			if !ackcompare.SliceStringPEqual(a.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes, b.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes) {
				delta.Add("Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes", a.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes, b.ko.Spec.InferenceSpecification.SupportedRealtimeInferenceInstanceTypes)
			}
		}
		if len(a.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes) != len(b.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes) {
			delta.Add("Spec.InferenceSpecification.SupportedResponseMIMETypes", a.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes, b.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes)
		} else if len(a.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes) > 0 {
			if !ackcompare.SliceStringPEqual(a.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes, b.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes) {
				delta.Add("Spec.InferenceSpecification.SupportedResponseMIMETypes", a.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes, b.ko.Spec.InferenceSpecification.SupportedResponseMIMETypes)
			}
		}
		if len(a.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes) != len(b.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes) {
			delta.Add("Spec.InferenceSpecification.SupportedTransformInstanceTypes", a.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes, b.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes)
		} else if len(a.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes) > 0 {
			if !ackcompare.SliceStringPEqual(a.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes, b.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes) {
				delta.Add("Spec.InferenceSpecification.SupportedTransformInstanceTypes", a.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes, b.ko.Spec.InferenceSpecification.SupportedTransformInstanceTypes)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.MetadataProperties, b.ko.Spec.MetadataProperties) {
		delta.Add("Spec.MetadataProperties", a.ko.Spec.MetadataProperties, b.ko.Spec.MetadataProperties)
	} else if a.ko.Spec.MetadataProperties != nil && b.ko.Spec.MetadataProperties != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.MetadataProperties.CommitID, b.ko.Spec.MetadataProperties.CommitID) {
			delta.Add("Spec.MetadataProperties.CommitID", a.ko.Spec.MetadataProperties.CommitID, b.ko.Spec.MetadataProperties.CommitID)
		} else if a.ko.Spec.MetadataProperties.CommitID != nil && b.ko.Spec.MetadataProperties.CommitID != nil {
			if *a.ko.Spec.MetadataProperties.CommitID != *b.ko.Spec.MetadataProperties.CommitID {
				delta.Add("Spec.MetadataProperties.CommitID", a.ko.Spec.MetadataProperties.CommitID, b.ko.Spec.MetadataProperties.CommitID)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.MetadataProperties.GeneratedBy, b.ko.Spec.MetadataProperties.GeneratedBy) {
			delta.Add("Spec.MetadataProperties.GeneratedBy", a.ko.Spec.MetadataProperties.GeneratedBy, b.ko.Spec.MetadataProperties.GeneratedBy)
		} else if a.ko.Spec.MetadataProperties.GeneratedBy != nil && b.ko.Spec.MetadataProperties.GeneratedBy != nil {
			if *a.ko.Spec.MetadataProperties.GeneratedBy != *b.ko.Spec.MetadataProperties.GeneratedBy {
				delta.Add("Spec.MetadataProperties.GeneratedBy", a.ko.Spec.MetadataProperties.GeneratedBy, b.ko.Spec.MetadataProperties.GeneratedBy)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.MetadataProperties.ProjectID, b.ko.Spec.MetadataProperties.ProjectID) {
			delta.Add("Spec.MetadataProperties.ProjectID", a.ko.Spec.MetadataProperties.ProjectID, b.ko.Spec.MetadataProperties.ProjectID)
		} else if a.ko.Spec.MetadataProperties.ProjectID != nil && b.ko.Spec.MetadataProperties.ProjectID != nil {
			if *a.ko.Spec.MetadataProperties.ProjectID != *b.ko.Spec.MetadataProperties.ProjectID {
				delta.Add("Spec.MetadataProperties.ProjectID", a.ko.Spec.MetadataProperties.ProjectID, b.ko.Spec.MetadataProperties.ProjectID)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.MetadataProperties.Repository, b.ko.Spec.MetadataProperties.Repository) {
			delta.Add("Spec.MetadataProperties.Repository", a.ko.Spec.MetadataProperties.Repository, b.ko.Spec.MetadataProperties.Repository)
		} else if a.ko.Spec.MetadataProperties.Repository != nil && b.ko.Spec.MetadataProperties.Repository != nil {
			if *a.ko.Spec.MetadataProperties.Repository != *b.ko.Spec.MetadataProperties.Repository {
				delta.Add("Spec.MetadataProperties.Repository", a.ko.Spec.MetadataProperties.Repository, b.ko.Spec.MetadataProperties.Repository)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ModelApprovalStatus, b.ko.Spec.ModelApprovalStatus) {
		delta.Add("Spec.ModelApprovalStatus", a.ko.Spec.ModelApprovalStatus, b.ko.Spec.ModelApprovalStatus)
	} else if a.ko.Spec.ModelApprovalStatus != nil && b.ko.Spec.ModelApprovalStatus != nil {
		if *a.ko.Spec.ModelApprovalStatus != *b.ko.Spec.ModelApprovalStatus {
			delta.Add("Spec.ModelApprovalStatus", a.ko.Spec.ModelApprovalStatus, b.ko.Spec.ModelApprovalStatus)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics, b.ko.Spec.ModelMetrics) {
		delta.Add("Spec.ModelMetrics", a.ko.Spec.ModelMetrics, b.ko.Spec.ModelMetrics)
	} else if a.ko.Spec.ModelMetrics != nil && b.ko.Spec.ModelMetrics != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias, b.ko.Spec.ModelMetrics.Bias) {
			delta.Add("Spec.ModelMetrics.Bias", a.ko.Spec.ModelMetrics.Bias, b.ko.Spec.ModelMetrics.Bias)
		} else if a.ko.Spec.ModelMetrics.Bias != nil && b.ko.Spec.ModelMetrics.Bias != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.PostTrainingReport, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport) {
				delta.Add("Spec.ModelMetrics.Bias.PostTrainingReport", a.ko.Spec.ModelMetrics.Bias.PostTrainingReport, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport)
			} else if a.ko.Spec.ModelMetrics.Bias.PostTrainingReport != nil && b.ko.Spec.ModelMetrics.Bias.PostTrainingReport != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest) {
					delta.Add("Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest", a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest)
				} else if a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest != nil && b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest != nil {
					if *a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest != *b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest {
						delta.Add("Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest", a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType) {
					delta.Add("Spec.ModelMetrics.Bias.PostTrainingReport.ContentType", a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType)
				} else if a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType != nil && b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType != nil {
					if *a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType != *b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType {
						delta.Add("Spec.ModelMetrics.Bias.PostTrainingReport.ContentType", a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI) {
					delta.Add("Spec.ModelMetrics.Bias.PostTrainingReport.S3URI", a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI)
				} else if a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI != nil && b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI != nil {
					if *a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI != *b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI {
						delta.Add("Spec.ModelMetrics.Bias.PostTrainingReport.S3URI", a.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI, b.ko.Spec.ModelMetrics.Bias.PostTrainingReport.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.PreTrainingReport, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport) {
				delta.Add("Spec.ModelMetrics.Bias.PreTrainingReport", a.ko.Spec.ModelMetrics.Bias.PreTrainingReport, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport)
			} else if a.ko.Spec.ModelMetrics.Bias.PreTrainingReport != nil && b.ko.Spec.ModelMetrics.Bias.PreTrainingReport != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest) {
					delta.Add("Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest", a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest)
				} else if a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest != nil && b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest != nil {
					if *a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest != *b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest {
						delta.Add("Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest", a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType) {
					delta.Add("Spec.ModelMetrics.Bias.PreTrainingReport.ContentType", a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType)
				} else if a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType != nil && b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType != nil {
					if *a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType != *b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType {
						delta.Add("Spec.ModelMetrics.Bias.PreTrainingReport.ContentType", a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI) {
					delta.Add("Spec.ModelMetrics.Bias.PreTrainingReport.S3URI", a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI)
				} else if a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI != nil && b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI != nil {
					if *a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI != *b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI {
						delta.Add("Spec.ModelMetrics.Bias.PreTrainingReport.S3URI", a.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI, b.ko.Spec.ModelMetrics.Bias.PreTrainingReport.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.Report, b.ko.Spec.ModelMetrics.Bias.Report) {
				delta.Add("Spec.ModelMetrics.Bias.Report", a.ko.Spec.ModelMetrics.Bias.Report, b.ko.Spec.ModelMetrics.Bias.Report)
			} else if a.ko.Spec.ModelMetrics.Bias.Report != nil && b.ko.Spec.ModelMetrics.Bias.Report != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.Report.ContentDigest, b.ko.Spec.ModelMetrics.Bias.Report.ContentDigest) {
					delta.Add("Spec.ModelMetrics.Bias.Report.ContentDigest", a.ko.Spec.ModelMetrics.Bias.Report.ContentDigest, b.ko.Spec.ModelMetrics.Bias.Report.ContentDigest)
				} else if a.ko.Spec.ModelMetrics.Bias.Report.ContentDigest != nil && b.ko.Spec.ModelMetrics.Bias.Report.ContentDigest != nil {
					if *a.ko.Spec.ModelMetrics.Bias.Report.ContentDigest != *b.ko.Spec.ModelMetrics.Bias.Report.ContentDigest {
						delta.Add("Spec.ModelMetrics.Bias.Report.ContentDigest", a.ko.Spec.ModelMetrics.Bias.Report.ContentDigest, b.ko.Spec.ModelMetrics.Bias.Report.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.Report.ContentType, b.ko.Spec.ModelMetrics.Bias.Report.ContentType) {
					delta.Add("Spec.ModelMetrics.Bias.Report.ContentType", a.ko.Spec.ModelMetrics.Bias.Report.ContentType, b.ko.Spec.ModelMetrics.Bias.Report.ContentType)
				} else if a.ko.Spec.ModelMetrics.Bias.Report.ContentType != nil && b.ko.Spec.ModelMetrics.Bias.Report.ContentType != nil {
					if *a.ko.Spec.ModelMetrics.Bias.Report.ContentType != *b.ko.Spec.ModelMetrics.Bias.Report.ContentType {
						delta.Add("Spec.ModelMetrics.Bias.Report.ContentType", a.ko.Spec.ModelMetrics.Bias.Report.ContentType, b.ko.Spec.ModelMetrics.Bias.Report.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Bias.Report.S3URI, b.ko.Spec.ModelMetrics.Bias.Report.S3URI) {
					delta.Add("Spec.ModelMetrics.Bias.Report.S3URI", a.ko.Spec.ModelMetrics.Bias.Report.S3URI, b.ko.Spec.ModelMetrics.Bias.Report.S3URI)
				} else if a.ko.Spec.ModelMetrics.Bias.Report.S3URI != nil && b.ko.Spec.ModelMetrics.Bias.Report.S3URI != nil {
					if *a.ko.Spec.ModelMetrics.Bias.Report.S3URI != *b.ko.Spec.ModelMetrics.Bias.Report.S3URI {
						delta.Add("Spec.ModelMetrics.Bias.Report.S3URI", a.ko.Spec.ModelMetrics.Bias.Report.S3URI, b.ko.Spec.ModelMetrics.Bias.Report.S3URI)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Explainability, b.ko.Spec.ModelMetrics.Explainability) {
			delta.Add("Spec.ModelMetrics.Explainability", a.ko.Spec.ModelMetrics.Explainability, b.ko.Spec.ModelMetrics.Explainability)
		} else if a.ko.Spec.ModelMetrics.Explainability != nil && b.ko.Spec.ModelMetrics.Explainability != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Explainability.Report, b.ko.Spec.ModelMetrics.Explainability.Report) {
				delta.Add("Spec.ModelMetrics.Explainability.Report", a.ko.Spec.ModelMetrics.Explainability.Report, b.ko.Spec.ModelMetrics.Explainability.Report)
			} else if a.ko.Spec.ModelMetrics.Explainability.Report != nil && b.ko.Spec.ModelMetrics.Explainability.Report != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest, b.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest) {
					delta.Add("Spec.ModelMetrics.Explainability.Report.ContentDigest", a.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest, b.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest)
				} else if a.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest != nil && b.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest != nil {
					if *a.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest != *b.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest {
						delta.Add("Spec.ModelMetrics.Explainability.Report.ContentDigest", a.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest, b.ko.Spec.ModelMetrics.Explainability.Report.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Explainability.Report.ContentType, b.ko.Spec.ModelMetrics.Explainability.Report.ContentType) {
					delta.Add("Spec.ModelMetrics.Explainability.Report.ContentType", a.ko.Spec.ModelMetrics.Explainability.Report.ContentType, b.ko.Spec.ModelMetrics.Explainability.Report.ContentType)
				} else if a.ko.Spec.ModelMetrics.Explainability.Report.ContentType != nil && b.ko.Spec.ModelMetrics.Explainability.Report.ContentType != nil {
					if *a.ko.Spec.ModelMetrics.Explainability.Report.ContentType != *b.ko.Spec.ModelMetrics.Explainability.Report.ContentType {
						delta.Add("Spec.ModelMetrics.Explainability.Report.ContentType", a.ko.Spec.ModelMetrics.Explainability.Report.ContentType, b.ko.Spec.ModelMetrics.Explainability.Report.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.Explainability.Report.S3URI, b.ko.Spec.ModelMetrics.Explainability.Report.S3URI) {
					delta.Add("Spec.ModelMetrics.Explainability.Report.S3URI", a.ko.Spec.ModelMetrics.Explainability.Report.S3URI, b.ko.Spec.ModelMetrics.Explainability.Report.S3URI)
				} else if a.ko.Spec.ModelMetrics.Explainability.Report.S3URI != nil && b.ko.Spec.ModelMetrics.Explainability.Report.S3URI != nil {
					if *a.ko.Spec.ModelMetrics.Explainability.Report.S3URI != *b.ko.Spec.ModelMetrics.Explainability.Report.S3URI {
						delta.Add("Spec.ModelMetrics.Explainability.Report.S3URI", a.ko.Spec.ModelMetrics.Explainability.Report.S3URI, b.ko.Spec.ModelMetrics.Explainability.Report.S3URI)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality, b.ko.Spec.ModelMetrics.ModelDataQuality) {
			delta.Add("Spec.ModelMetrics.ModelDataQuality", a.ko.Spec.ModelMetrics.ModelDataQuality, b.ko.Spec.ModelMetrics.ModelDataQuality)
		} else if a.ko.Spec.ModelMetrics.ModelDataQuality != nil && b.ko.Spec.ModelMetrics.ModelDataQuality != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints) {
				delta.Add("Spec.ModelMetrics.ModelDataQuality.Constraints", a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints)
			} else if a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints != nil && b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest) {
					delta.Add("Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest", a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest)
				} else if a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest != nil && b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest != nil {
					if *a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest != *b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest {
						delta.Add("Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest", a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType) {
					delta.Add("Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType", a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType)
				} else if a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType != nil && b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType != nil {
					if *a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType != *b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType {
						delta.Add("Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType", a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI) {
					delta.Add("Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI", a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI)
				} else if a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI != nil && b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI != nil {
					if *a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI != *b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI {
						delta.Add("Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI", a.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI, b.ko.Spec.ModelMetrics.ModelDataQuality.Constraints.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics) {
				delta.Add("Spec.ModelMetrics.ModelDataQuality.Statistics", a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics)
			} else if a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics != nil && b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest) {
					delta.Add("Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest", a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest)
				} else if a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest != nil && b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest != nil {
					if *a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest != *b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest {
						delta.Add("Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest", a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType) {
					delta.Add("Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType", a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType)
				} else if a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType != nil && b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType != nil {
					if *a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType != *b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType {
						delta.Add("Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType", a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI) {
					delta.Add("Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI", a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI)
				} else if a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI != nil && b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI != nil {
					if *a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI != *b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI {
						delta.Add("Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI", a.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI, b.ko.Spec.ModelMetrics.ModelDataQuality.Statistics.S3URI)
					}
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality, b.ko.Spec.ModelMetrics.ModelQuality) {
			delta.Add("Spec.ModelMetrics.ModelQuality", a.ko.Spec.ModelMetrics.ModelQuality, b.ko.Spec.ModelMetrics.ModelQuality)
		} else if a.ko.Spec.ModelMetrics.ModelQuality != nil && b.ko.Spec.ModelMetrics.ModelQuality != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality.Constraints, b.ko.Spec.ModelMetrics.ModelQuality.Constraints) {
				delta.Add("Spec.ModelMetrics.ModelQuality.Constraints", a.ko.Spec.ModelMetrics.ModelQuality.Constraints, b.ko.Spec.ModelMetrics.ModelQuality.Constraints)
			} else if a.ko.Spec.ModelMetrics.ModelQuality.Constraints != nil && b.ko.Spec.ModelMetrics.ModelQuality.Constraints != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest) {
					delta.Add("Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest", a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest)
				} else if a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest != nil && b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest != nil {
					if *a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest != *b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest {
						delta.Add("Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest", a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType) {
					delta.Add("Spec.ModelMetrics.ModelQuality.Constraints.ContentType", a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType)
				} else if a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType != nil && b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType != nil {
					if *a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType != *b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType {
						delta.Add("Spec.ModelMetrics.ModelQuality.Constraints.ContentType", a.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI) {
					delta.Add("Spec.ModelMetrics.ModelQuality.Constraints.S3URI", a.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI)
				} else if a.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI != nil && b.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI != nil {
					if *a.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI != *b.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI {
						delta.Add("Spec.ModelMetrics.ModelQuality.Constraints.S3URI", a.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI, b.ko.Spec.ModelMetrics.ModelQuality.Constraints.S3URI)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality.Statistics, b.ko.Spec.ModelMetrics.ModelQuality.Statistics) {
				delta.Add("Spec.ModelMetrics.ModelQuality.Statistics", a.ko.Spec.ModelMetrics.ModelQuality.Statistics, b.ko.Spec.ModelMetrics.ModelQuality.Statistics)
			} else if a.ko.Spec.ModelMetrics.ModelQuality.Statistics != nil && b.ko.Spec.ModelMetrics.ModelQuality.Statistics != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest) {
					delta.Add("Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest", a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest)
				} else if a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest != nil && b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest != nil {
					if *a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest != *b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest {
						delta.Add("Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest", a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentDigest)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType) {
					delta.Add("Spec.ModelMetrics.ModelQuality.Statistics.ContentType", a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType)
				} else if a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType != nil && b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType != nil {
					if *a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType != *b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType {
						delta.Add("Spec.ModelMetrics.ModelQuality.Statistics.ContentType", a.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.ContentType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI) {
					delta.Add("Spec.ModelMetrics.ModelQuality.Statistics.S3URI", a.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI)
				} else if a.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI != nil && b.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI != nil {
					if *a.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI != *b.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI {
						delta.Add("Spec.ModelMetrics.ModelQuality.Statistics.S3URI", a.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI, b.ko.Spec.ModelMetrics.ModelQuality.Statistics.S3URI)
					}
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ModelPackageDescription, b.ko.Spec.ModelPackageDescription) {
		delta.Add("Spec.ModelPackageDescription", a.ko.Spec.ModelPackageDescription, b.ko.Spec.ModelPackageDescription)
	} else if a.ko.Spec.ModelPackageDescription != nil && b.ko.Spec.ModelPackageDescription != nil {
		if *a.ko.Spec.ModelPackageDescription != *b.ko.Spec.ModelPackageDescription {
			delta.Add("Spec.ModelPackageDescription", a.ko.Spec.ModelPackageDescription, b.ko.Spec.ModelPackageDescription)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ModelPackageGroupName, b.ko.Spec.ModelPackageGroupName) {
		delta.Add("Spec.ModelPackageGroupName", a.ko.Spec.ModelPackageGroupName, b.ko.Spec.ModelPackageGroupName)
	} else if a.ko.Spec.ModelPackageGroupName != nil && b.ko.Spec.ModelPackageGroupName != nil {
		if *a.ko.Spec.ModelPackageGroupName != *b.ko.Spec.ModelPackageGroupName {
			delta.Add("Spec.ModelPackageGroupName", a.ko.Spec.ModelPackageGroupName, b.ko.Spec.ModelPackageGroupName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ModelPackageName, b.ko.Spec.ModelPackageName) {
		delta.Add("Spec.ModelPackageName", a.ko.Spec.ModelPackageName, b.ko.Spec.ModelPackageName)
	} else if a.ko.Spec.ModelPackageName != nil && b.ko.Spec.ModelPackageName != nil {
		if *a.ko.Spec.ModelPackageName != *b.ko.Spec.ModelPackageName {
			delta.Add("Spec.ModelPackageName", a.ko.Spec.ModelPackageName, b.ko.Spec.ModelPackageName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.SamplePayloadURL, b.ko.Spec.SamplePayloadURL) {
		delta.Add("Spec.SamplePayloadURL", a.ko.Spec.SamplePayloadURL, b.ko.Spec.SamplePayloadURL)
	} else if a.ko.Spec.SamplePayloadURL != nil && b.ko.Spec.SamplePayloadURL != nil {
		if *a.ko.Spec.SamplePayloadURL != *b.ko.Spec.SamplePayloadURL {
			delta.Add("Spec.SamplePayloadURL", a.ko.Spec.SamplePayloadURL, b.ko.Spec.SamplePayloadURL)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.SourceAlgorithmSpecification, b.ko.Spec.SourceAlgorithmSpecification) {
		delta.Add("Spec.SourceAlgorithmSpecification", a.ko.Spec.SourceAlgorithmSpecification, b.ko.Spec.SourceAlgorithmSpecification)
	} else if a.ko.Spec.SourceAlgorithmSpecification != nil && b.ko.Spec.SourceAlgorithmSpecification != nil {
		if len(a.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms) != len(b.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms) {
			delta.Add("Spec.SourceAlgorithmSpecification.SourceAlgorithms", a.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms, b.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms)
		} else if len(a.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms) > 0 {
			if !reflect.DeepEqual(a.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms, b.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms) {
				delta.Add("Spec.SourceAlgorithmSpecification.SourceAlgorithms", a.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms, b.ko.Spec.SourceAlgorithmSpecification.SourceAlgorithms)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Task, b.ko.Spec.Task) {
		delta.Add("Spec.Task", a.ko.Spec.Task, b.ko.Spec.Task)
	} else if a.ko.Spec.Task != nil && b.ko.Spec.Task != nil {
		if *a.ko.Spec.Task != *b.ko.Spec.Task {
			delta.Add("Spec.Task", a.ko.Spec.Task, b.ko.Spec.Task)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ValidationSpecification, b.ko.Spec.ValidationSpecification) {
		delta.Add("Spec.ValidationSpecification", a.ko.Spec.ValidationSpecification, b.ko.Spec.ValidationSpecification)
	} else if a.ko.Spec.ValidationSpecification != nil && b.ko.Spec.ValidationSpecification != nil {
		if len(a.ko.Spec.ValidationSpecification.ValidationProfiles) != len(b.ko.Spec.ValidationSpecification.ValidationProfiles) {
			delta.Add("Spec.ValidationSpecification.ValidationProfiles", a.ko.Spec.ValidationSpecification.ValidationProfiles, b.ko.Spec.ValidationSpecification.ValidationProfiles)
		} else if len(a.ko.Spec.ValidationSpecification.ValidationProfiles) > 0 {
			if !reflect.DeepEqual(a.ko.Spec.ValidationSpecification.ValidationProfiles, b.ko.Spec.ValidationSpecification.ValidationProfiles) {
				delta.Add("Spec.ValidationSpecification.ValidationProfiles", a.ko.Spec.ValidationSpecification.ValidationProfiles, b.ko.Spec.ValidationSpecification.ValidationProfiles)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ValidationSpecification.ValidationRole, b.ko.Spec.ValidationSpecification.ValidationRole) {
			delta.Add("Spec.ValidationSpecification.ValidationRole", a.ko.Spec.ValidationSpecification.ValidationRole, b.ko.Spec.ValidationSpecification.ValidationRole)
		} else if a.ko.Spec.ValidationSpecification.ValidationRole != nil && b.ko.Spec.ValidationSpecification.ValidationRole != nil {
			if *a.ko.Spec.ValidationSpecification.ValidationRole != *b.ko.Spec.ValidationSpecification.ValidationRole {
				delta.Add("Spec.ValidationSpecification.ValidationRole", a.ko.Spec.ValidationSpecification.ValidationRole, b.ko.Spec.ValidationSpecification.ValidationRole)
			}
		}
	}

	return delta
}
