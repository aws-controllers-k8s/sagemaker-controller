tests:
  - name: "Monitoring schedule create tests"
    description: "Testing the create operation"
    scenarios:
      - name: "Create=InvalidInput"
        description: "Given one of the parameters is invalid, ko.Status shows a terminal condition"
        given:
          desired_state: "/v1alpha1/create/desired/invalid_before_create.yaml"
          svc_api:
            - operation: CreateMonitoringScheduleWithContext
              error:
                code: InvalidParameterValue
                message: "The monitoring schedule name must not include a special character."
        invoke: Create
        expect:
          latest_state: "v1alpha1/create/observed/invalid_create_attempted.yaml"
          error: resource is in terminal condition
      - name: "Create=Valid"
        description: "Create a new monitoring schedule successfully (ARN in status)."
        given:
          desired_state: "v1alpha1/create/desired/success_before_create.yaml"
          svc_api:
            - operation: CreateMonitoringScheduleWithContext
              output_fixture: "sdkapi/create/success_create.json"
        invoke: Create
        expect:
          latest_state: "v1alpha1/create/observed/success_after_create.yaml"
          error: null
  - name: "Monitoring Schedule readOne tests"
    description: "Testing the readOne operation"
    scenarios:
      - name: "ReadOne=MissingRequiredField"
        description: "Testing readOne when required field is missing. No API call is made and returns error."
        given: 
          desired_state: "v1alpha1/readone/desired/missing_required_field.yaml"
        invoke: ReadOne
        expect:
          error: "resource not found"
      - name: "ReadOne=NotFound"
        description: "Testing readOne when Describe fails to find the resource on SageMaker"
        given: 
          desired_state: "v1alpha1/create/observed/success_after_create.yaml"
          svc_api:
            - operation: DescribeMonitoringScheduleWithContext
              error:
                code: ResourceNotFound
                message: "Could not find monitoring schedule"
        invoke: ReadOne
        expect:
          error: "resource not found"
      - name: "ReadOne=Fail"
        description: "This test checks if the condition is updated if describe fails and readOne returns error"
        given: 
          desired_state: "v1alpha1/create/observed/success_after_create.yaml"
          svc_api:
            - operation: DescribeMonitoringScheduleWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/error_on_describe.yaml"
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
      - name: "ReadOne=AfterCreate"
        description: "Testing readOne right after create, there should be no delta."
        given:
          desired_state: "v1alpha1/create/observed/success_after_create.yaml"
          svc_api:
            - operation: DescribeMonitoringScheduleWithContext
              output_fixture: "sdkapi/describe/scheduled_describe.json"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/scheduled.yaml"
      - name: "ReadOne=SuccessClearsConditions"
        description: Testing a successful reconciliation clears conditions if terminal/recoverable condition were already set to true
        given:
          desired_state: "v1alpha1/readone/desired/error_conditions_true.yaml"
          svc_api:
            - operation: DescribeMonitoringScheduleWithContext
              output_fixture: "sdkapi/describe/scheduled_describe.json"
        invoke: ReadOne
        expect:
          latest_state: "v1alpha1/readone/observed/conditions_clear_on_success.yaml"
  - name: "Monitoring Schedule update tests"
    description: "Testing the update operation"
    scenarios:
      - name: "Update=RequeueOnCreating"
        description: "This test checks if the controller requeues if monitoring schedule is in pending status and Job is InProgress"
        given:
          desired_state: "v1alpha1/update/desired/updated_base.yaml"
          latest_state: "v1alpha1/update/desired/pending_on_update.yaml"
        invoke: Update
        expect:
          error: "Monitoring Job in InProgress state, MonitoringSchedule cannot be modified or deleted."
      - name: "Update=Successful"
        description: "This test checks if the controller throws error for update"
        given:
          desired_state: "v1alpha1/update/desired/updated_base.yaml"
          latest_state: "v1alpha1/create/observed/success_after_create.yaml"
          svc_api:
              - operation: UpdateMonitoringScheduleWithContext
                output_fixture: "sdkapi/update/update_success_schedule_pending.json"
        invoke: Update
        expect:
          latest_state: "v1alpha1/update/observed/updated_successfully_schedule_pending.yaml"
      - name: "Update=Fail"
        description: "This test checks if the recoverable condition is updated if update fails and returns error"
        given:
          desired_state: "v1alpha1/update/desired/updated_base.yaml"
          latest_state: "v1alpha1/readone/observed/error_on_describe.yaml"
          svc_api:
            - operation: UpdateMonitoringScheduleWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: Update
        expect:
          latest_state: "v1alpha1/update/observed/error_on_update.yaml"
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
  - name: "Monitoring Schedule delete tests"
    description: "Testing the delete operation"
    scenarios:
      - name: "Delete=RequeueOnCreating"
        description: "This test checks if the controller requeues if monitoring schedule is in pending status and Job is InProgress"
        given:
          desired_state: "v1alpha1/delete/desired/pending_on_delete.yaml"
        invoke: Delete
        expect:
          error: "Monitoring Job in InProgress state, MonitoringSchedule cannot be modified or deleted."
      - name: "Delete=Fail"
        description: "This test checks if the condition is updated if delete fails and returns error"
        given:
          desired_state: "v1alpha1/create/observed/success_after_create.yaml"
          svc_api:
            - operation: DeleteMonitoringScheduleWithContext
              error:
                code: ServiceUnavailable
                message: "Server is down"
        invoke: Delete
        expect:
          latest_state: "v1alpha1/delete/observed/error_on_delete.yaml"
          error: "ServiceUnavailable: Server is down\n\tstatus code: 0, request id: "
      - name: "Delete=SuccessfulNoStatus"
        description: "This test checks if the monitoring schedule is deleted successfully while status is null"
        given:
          desired_state: "v1alpha1/create/observed/success_after_create.yaml"
          svc_api:
            - operation: DeleteMonitoringScheduleWithContext
            - operation: DescribeMonitoringScheduleWithContext
              error:
                code: ResourceNotFound
                message: "Could not find monitoring schedule"  
        invoke: Delete
        expect:
          error: nil  
      - name: "Delete=SuccessfulScheduled"
        description: "This test checks if the monitoring schedule is deleted successfully while in Scheduled status"
        given:
          desired_state: "v1alpha1/readone/observed/scheduled.yaml"
          svc_api:
            - operation: DeleteMonitoringScheduleWithContext
            - operation: DescribeMonitoringScheduleWithContext
              error:
                code: ResourceNotFound
                message: "Could not find monitoring schedule"  
        invoke: Delete
        expect:
          error: nil  