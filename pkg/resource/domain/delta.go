// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package domain

import (
	"bytes"
	"reflect"

	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
	acktags "github.com/aws-controllers-k8s/runtime/pkg/tags"
)

// Hack to avoid import errors during build...
var (
	_ = &bytes.Buffer{}
	_ = &reflect.Method{}
	_ = &acktags.Tags{}
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}

	if ackcompare.HasNilDifference(a.ko.Spec.AppNetworkAccessType, b.ko.Spec.AppNetworkAccessType) {
		delta.Add("Spec.AppNetworkAccessType", a.ko.Spec.AppNetworkAccessType, b.ko.Spec.AppNetworkAccessType)
	} else if a.ko.Spec.AppNetworkAccessType != nil && b.ko.Spec.AppNetworkAccessType != nil {
		if *a.ko.Spec.AppNetworkAccessType != *b.ko.Spec.AppNetworkAccessType {
			delta.Add("Spec.AppNetworkAccessType", a.ko.Spec.AppNetworkAccessType, b.ko.Spec.AppNetworkAccessType)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.AppSecurityGroupManagement, b.ko.Spec.AppSecurityGroupManagement) {
		delta.Add("Spec.AppSecurityGroupManagement", a.ko.Spec.AppSecurityGroupManagement, b.ko.Spec.AppSecurityGroupManagement)
	} else if a.ko.Spec.AppSecurityGroupManagement != nil && b.ko.Spec.AppSecurityGroupManagement != nil {
		if *a.ko.Spec.AppSecurityGroupManagement != *b.ko.Spec.AppSecurityGroupManagement {
			delta.Add("Spec.AppSecurityGroupManagement", a.ko.Spec.AppSecurityGroupManagement, b.ko.Spec.AppSecurityGroupManagement)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.AuthMode, b.ko.Spec.AuthMode) {
		delta.Add("Spec.AuthMode", a.ko.Spec.AuthMode, b.ko.Spec.AuthMode)
	} else if a.ko.Spec.AuthMode != nil && b.ko.Spec.AuthMode != nil {
		if *a.ko.Spec.AuthMode != *b.ko.Spec.AuthMode {
			delta.Add("Spec.AuthMode", a.ko.Spec.AuthMode, b.ko.Spec.AuthMode)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings, b.ko.Spec.DefaultUserSettings) {
		delta.Add("Spec.DefaultUserSettings", a.ko.Spec.DefaultUserSettings, b.ko.Spec.DefaultUserSettings)
	} else if a.ko.Spec.DefaultUserSettings != nil && b.ko.Spec.DefaultUserSettings != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.ExecutionRole, b.ko.Spec.DefaultUserSettings.ExecutionRole) {
			delta.Add("Spec.DefaultUserSettings.ExecutionRole", a.ko.Spec.DefaultUserSettings.ExecutionRole, b.ko.Spec.DefaultUserSettings.ExecutionRole)
		} else if a.ko.Spec.DefaultUserSettings.ExecutionRole != nil && b.ko.Spec.DefaultUserSettings.ExecutionRole != nil {
			if *a.ko.Spec.DefaultUserSettings.ExecutionRole != *b.ko.Spec.DefaultUserSettings.ExecutionRole {
				delta.Add("Spec.DefaultUserSettings.ExecutionRole", a.ko.Spec.DefaultUserSettings.ExecutionRole, b.ko.Spec.DefaultUserSettings.ExecutionRole)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings) {
			delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings)
		} else if a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings != nil && b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec) {
				delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec)
			} else if a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec != nil && b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType) {
					delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType)
				} else if a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType != nil && b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType != nil {
					if *a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType != *b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType {
						delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.InstanceType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN) {
					delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN)
				} else if a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN != nil && b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN != nil {
					if *a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN != *b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN {
						delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.LifecycleConfigARN)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN) {
					delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN)
				} else if a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN != nil && b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN != nil {
					if *a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN != *b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN {
						delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageARN)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN) {
					delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN)
				} else if a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != nil && b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != nil {
					if *a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != *b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN {
						delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.DefaultResourceSpec.SageMakerImageVersionARN)
					}
				}
			}
			if len(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs) != len(b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs) {
				delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs)
			} else if len(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs) > 0 {
				if !ackcompare.SliceStringPEqual(a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs) {
					delta.Add("Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs", a.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs, b.ko.Spec.DefaultUserSettings.JupyterServerAppSettings.LifecycleConfigARNs)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings) {
			delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings)
		} else if a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings != nil && b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings != nil {
			if len(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages) != len(b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages) {
				delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages)
			} else if len(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages) > 0 {
				if !reflect.DeepEqual(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages) {
					delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.CustomImages)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec) {
				delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec)
			} else if a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec != nil && b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType) {
					delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType)
				} else if a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType != nil && b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType != nil {
					if *a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType != *b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType {
						delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.InstanceType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN) {
					delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN)
				} else if a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN != nil && b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN != nil {
					if *a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN != *b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN {
						delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.LifecycleConfigARN)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN) {
					delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN)
				} else if a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN != nil && b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN != nil {
					if *a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN != *b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN {
						delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageARN)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN) {
					delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN)
				} else if a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != nil && b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != nil {
					if *a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != *b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN {
						delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.DefaultResourceSpec.SageMakerImageVersionARN)
					}
				}
			}
			if len(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs) != len(b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs) {
				delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs)
			} else if len(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs) > 0 {
				if !ackcompare.SliceStringPEqual(a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs) {
					delta.Add("Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs", a.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs, b.ko.Spec.DefaultUserSettings.KernelGatewayAppSettings.LifecycleConfigARNs)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings, b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings) {
			delta.Add("Spec.DefaultUserSettings.RStudioServerProAppSettings", a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings, b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings)
		} else if a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings != nil && b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus, b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus) {
				delta.Add("Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus", a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus, b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus)
			} else if a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus != nil && b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus != nil {
				if *a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus != *b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus {
					delta.Add("Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus", a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus, b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.AccessStatus)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup, b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup) {
				delta.Add("Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup", a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup, b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup)
			} else if a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup != nil && b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup != nil {
				if *a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup != *b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup {
					delta.Add("Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup", a.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup, b.ko.Spec.DefaultUserSettings.RStudioServerProAppSettings.UserGroup)
				}
			}
		}
		if len(a.ko.Spec.DefaultUserSettings.SecurityGroups) != len(b.ko.Spec.DefaultUserSettings.SecurityGroups) {
			delta.Add("Spec.DefaultUserSettings.SecurityGroups", a.ko.Spec.DefaultUserSettings.SecurityGroups, b.ko.Spec.DefaultUserSettings.SecurityGroups)
		} else if len(a.ko.Spec.DefaultUserSettings.SecurityGroups) > 0 {
			if !ackcompare.SliceStringPEqual(a.ko.Spec.DefaultUserSettings.SecurityGroups, b.ko.Spec.DefaultUserSettings.SecurityGroups) {
				delta.Add("Spec.DefaultUserSettings.SecurityGroups", a.ko.Spec.DefaultUserSettings.SecurityGroups, b.ko.Spec.DefaultUserSettings.SecurityGroups)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.SharingSettings, b.ko.Spec.DefaultUserSettings.SharingSettings) {
			delta.Add("Spec.DefaultUserSettings.SharingSettings", a.ko.Spec.DefaultUserSettings.SharingSettings, b.ko.Spec.DefaultUserSettings.SharingSettings)
		} else if a.ko.Spec.DefaultUserSettings.SharingSettings != nil && b.ko.Spec.DefaultUserSettings.SharingSettings != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption, b.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption) {
				delta.Add("Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption", a.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption, b.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption)
			} else if a.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption != nil && b.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption != nil {
				if *a.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption != *b.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption {
					delta.Add("Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption", a.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption, b.ko.Spec.DefaultUserSettings.SharingSettings.NotebookOutputOption)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID, b.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID) {
				delta.Add("Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID", a.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID, b.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID)
			} else if a.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID != nil && b.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID != nil {
				if *a.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID != *b.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID {
					delta.Add("Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID", a.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID, b.ko.Spec.DefaultUserSettings.SharingSettings.S3KMSKeyID)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath, b.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath) {
				delta.Add("Spec.DefaultUserSettings.SharingSettings.S3OutputPath", a.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath, b.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath)
			} else if a.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath != nil && b.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath != nil {
				if *a.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath != *b.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath {
					delta.Add("Spec.DefaultUserSettings.SharingSettings.S3OutputPath", a.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath, b.ko.Spec.DefaultUserSettings.SharingSettings.S3OutputPath)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings) {
			delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings)
		} else if a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings != nil && b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec) {
				delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec)
			} else if a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec != nil && b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType) {
					delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType)
				} else if a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType != nil && b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType != nil {
					if *a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType != *b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType {
						delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.InstanceType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN) {
					delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN)
				} else if a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN != nil && b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN != nil {
					if *a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN != *b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN {
						delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.LifecycleConfigARN)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN) {
					delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN)
				} else if a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN != nil && b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN != nil {
					if *a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN != *b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN {
						delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageARN)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN) {
					delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN)
				} else if a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != nil && b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != nil {
					if *a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN != *b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN {
						delta.Add("Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN", a.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DefaultUserSettings.TensorBoardAppSettings.DefaultResourceSpec.SageMakerImageVersionARN)
					}
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.DomainName, b.ko.Spec.DomainName) {
		delta.Add("Spec.DomainName", a.ko.Spec.DomainName, b.ko.Spec.DomainName)
	} else if a.ko.Spec.DomainName != nil && b.ko.Spec.DomainName != nil {
		if *a.ko.Spec.DomainName != *b.ko.Spec.DomainName {
			delta.Add("Spec.DomainName", a.ko.Spec.DomainName, b.ko.Spec.DomainName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings, b.ko.Spec.DomainSettings) {
		delta.Add("Spec.DomainSettings", a.ko.Spec.DomainSettings, b.ko.Spec.DomainSettings)
	} else if a.ko.Spec.DomainSettings != nil && b.ko.Spec.DomainSettings != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings) {
			delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings)
		} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec) {
				delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec)
			} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType) {
					delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType)
				} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType != nil {
					if *a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType != *b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType {
						delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.InstanceType)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN) {
					delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN)
				} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN != nil {
					if *a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN != *b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN {
						delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.LifecycleConfigARN)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN) {
					delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN)
				} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN != nil {
					if *a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN != *b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN {
						delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageARN)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN) {
					delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN)
				} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN != nil {
					if *a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN != *b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN {
						delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DefaultResourceSpec.SageMakerImageVersionARN)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN) {
				delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN)
			} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN != nil {
				if *a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN != *b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN {
					delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.DomainExecutionRoleARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL) {
				delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL)
			} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL != nil {
				if *a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL != *b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL {
					delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioConnectURL)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL) {
				delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL)
			} else if a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL != nil && b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL != nil {
				if *a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL != *b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL {
					delta.Add("Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL", a.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL, b.ko.Spec.DomainSettings.RStudioServerProDomainSettings.RStudioPackageManagerURL)
				}
			}
		}
		if len(a.ko.Spec.DomainSettings.SecurityGroupIDs) != len(b.ko.Spec.DomainSettings.SecurityGroupIDs) {
			delta.Add("Spec.DomainSettings.SecurityGroupIDs", a.ko.Spec.DomainSettings.SecurityGroupIDs, b.ko.Spec.DomainSettings.SecurityGroupIDs)
		} else if len(a.ko.Spec.DomainSettings.SecurityGroupIDs) > 0 {
			if !ackcompare.SliceStringPEqual(a.ko.Spec.DomainSettings.SecurityGroupIDs, b.ko.Spec.DomainSettings.SecurityGroupIDs) {
				delta.Add("Spec.DomainSettings.SecurityGroupIDs", a.ko.Spec.DomainSettings.SecurityGroupIDs, b.ko.Spec.DomainSettings.SecurityGroupIDs)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.HomeEFSFileSystemKMSKeyID, b.ko.Spec.HomeEFSFileSystemKMSKeyID) {
		delta.Add("Spec.HomeEFSFileSystemKMSKeyID", a.ko.Spec.HomeEFSFileSystemKMSKeyID, b.ko.Spec.HomeEFSFileSystemKMSKeyID)
	} else if a.ko.Spec.HomeEFSFileSystemKMSKeyID != nil && b.ko.Spec.HomeEFSFileSystemKMSKeyID != nil {
		if *a.ko.Spec.HomeEFSFileSystemKMSKeyID != *b.ko.Spec.HomeEFSFileSystemKMSKeyID {
			delta.Add("Spec.HomeEFSFileSystemKMSKeyID", a.ko.Spec.HomeEFSFileSystemKMSKeyID, b.ko.Spec.HomeEFSFileSystemKMSKeyID)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.KMSKeyID, b.ko.Spec.KMSKeyID) {
		delta.Add("Spec.KMSKeyID", a.ko.Spec.KMSKeyID, b.ko.Spec.KMSKeyID)
	} else if a.ko.Spec.KMSKeyID != nil && b.ko.Spec.KMSKeyID != nil {
		if *a.ko.Spec.KMSKeyID != *b.ko.Spec.KMSKeyID {
			delta.Add("Spec.KMSKeyID", a.ko.Spec.KMSKeyID, b.ko.Spec.KMSKeyID)
		}
	}
	if len(a.ko.Spec.SubnetIDs) != len(b.ko.Spec.SubnetIDs) {
		delta.Add("Spec.SubnetIDs", a.ko.Spec.SubnetIDs, b.ko.Spec.SubnetIDs)
	} else if len(a.ko.Spec.SubnetIDs) > 0 {
		if !ackcompare.SliceStringPEqual(a.ko.Spec.SubnetIDs, b.ko.Spec.SubnetIDs) {
			delta.Add("Spec.SubnetIDs", a.ko.Spec.SubnetIDs, b.ko.Spec.SubnetIDs)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.VPCID, b.ko.Spec.VPCID) {
		delta.Add("Spec.VPCID", a.ko.Spec.VPCID, b.ko.Spec.VPCID)
	} else if a.ko.Spec.VPCID != nil && b.ko.Spec.VPCID != nil {
		if *a.ko.Spec.VPCID != *b.ko.Spec.VPCID {
			delta.Add("Spec.VPCID", a.ko.Spec.VPCID, b.ko.Spec.VPCID)
		}
	}

	return delta
}
