// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ModelPackageSpec defines the desired state of ModelPackage.
//
// A versioned model that can be deployed for SageMaker inference.
type ModelPackageSpec struct {
	// A description for the approval status of the model.
	ApprovalDescription *string `json:"approvalDescription,omitempty"`
	// Whether to certify the model package for listing on AWS Marketplace.
	//
	// This parameter is optional for unversioned models, and does not apply to
	// versioned models.
	CertifyForMarketplace *bool `json:"certifyForMarketplace,omitempty"`
	// A unique token that guarantees that the call to this API is idempotent.
	ClientToken *string `json:"clientToken,omitempty"`
	// Specifies details about inference jobs that can be run with models based
	// on this model package, including the following:
	//
	//    * The Amazon ECR paths of containers that contain the inference code and
	//    model artifacts.
	//
	//    * The instance types that the model package supports for transform jobs
	//    and real-time endpoints used for inference.
	//
	//    * The input and output content formats that the model package supports
	//    for inference.
	InferenceSpecification *InferenceSpecification `json:"inferenceSpecification,omitempty"`

	MetadataProperties *MetadataProperties `json:"metadataProperties,omitempty"`
	// Whether the model is approved for deployment.
	//
	// This parameter is optional for versioned models, and does not apply to unversioned
	// models.
	//
	// For versioned models, the value of this parameter must be set to Approved
	// to deploy the model.
	ModelApprovalStatus *string `json:"modelApprovalStatus,omitempty"`
	// A structure that contains model metrics reports.
	ModelMetrics *ModelMetrics `json:"modelMetrics,omitempty"`
	// A description of the model package.
	ModelPackageDescription *string `json:"modelPackageDescription,omitempty"`
	// The name of the model group that this model version belongs to.
	//
	// This parameter is required for versioned models, and does not apply to unversioned
	// models.
	ModelPackageGroupName *string `json:"modelPackageGroupName,omitempty"`
	// The name of the model package. The name must have 1 to 63 characters. Valid
	// characters are a-z, A-Z, 0-9, and - (hyphen).
	//
	// This parameter is required for unversioned models. It is not applicable to
	// versioned models.
	ModelPackageName *string `json:"modelPackageName,omitempty"`
	// Details about the algorithm that was used to create the model package.
	SourceAlgorithmSpecification *SourceAlgorithmSpecification `json:"sourceAlgorithmSpecification,omitempty"`
	// A list of key value pairs associated with the model. For more information,
	// see Tagging AWS resources (https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
	// in the AWS General Reference Guide.
	Tags []*Tag `json:"tags,omitempty"`
	// Specifies configurations for one or more transform jobs that Amazon SageMaker
	// runs to test the model package.
	ValidationSpecification *ModelPackageValidationSpecification `json:"validationSpecification,omitempty"`
}

// ModelPackageStatus defines the observed state of ModelPackage
type ModelPackageStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// A timestamp specifying when the model package was created.
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
	// The last time the model package was modified.
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	// The approval status of the model package.
	ModelApprovalStatus *string `json:"modelApprovalStatus,omitempty"`
	// The current status of the model package.
	ModelPackageStatus *string `json:"modelPackageStatus,omitempty"`
	// Details about the current status of the model package.
	ModelPackageStatusDetails *ModelPackageStatusDetails `json:"modelPackageStatusDetails,omitempty"`
}

// ModelPackage is the Schema for the ModelPackages API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="STATUS",type=string,priority=0,JSONPath=`.status.modelPackageStatus`
type ModelPackage struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ModelPackageSpec   `json:"spec,omitempty"`
	Status            ModelPackageStatus `json:"status,omitempty"`
}

// ModelPackageList contains a list of ModelPackage
// +kubebuilder:object:root=true
type ModelPackageList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ModelPackage `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ModelPackage{}, &ModelPackageList{})
}
