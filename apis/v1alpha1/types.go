// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type ActionSummary struct {
	ActionName       *string      `json:"actionName,omitempty"`
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type Alarm struct {
	AlarmName *string `json:"alarmName,omitempty"`
}

type AlgorithmSpecification struct {
	AlgorithmName                    *string             `json:"algorithmName,omitempty"`
	EnableSageMakerMetricsTimeSeries *bool               `json:"enableSageMakerMetricsTimeSeries,omitempty"`
	MetricDefinitions                []*MetricDefinition `json:"metricDefinitions,omitempty"`
	TrainingImage                    *string             `json:"trainingImage,omitempty"`
	TrainingInputMode                *string             `json:"trainingInputMode,omitempty"`
}

type AlgorithmStatusItem struct {
	FailureReason *string `json:"failureReason,omitempty"`
}

type AlgorithmValidationSpecification struct {
	ValidationRole *string `json:"validationRole,omitempty"`
}

type AppImageConfigDetails struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type AppSpecification struct {
	ContainerArguments  []*string `json:"containerArguments,omitempty"`
	ContainerEntrypoint []*string `json:"containerEntrypoint,omitempty"`
	ImageURI            *string   `json:"imageURI,omitempty"`
}

type ArtifactSummary struct {
	ArtifactName     *string      `json:"artifactName,omitempty"`
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type AssociationSummary struct {
	CreationTime    *metav1.Time `json:"creationTime,omitempty"`
	DestinationName *string      `json:"destinationName,omitempty"`
	SourceName      *string      `json:"sourceName,omitempty"`
}

type AthenaDatasetDefinition struct {
	Catalog           *string `json:"catalog,omitempty"`
	Database          *string `json:"database,omitempty"`
	KMSKeyID          *string `json:"kmsKeyID,omitempty"`
	OutputCompression *string `json:"outputCompression,omitempty"`
	OutputFormat      *string `json:"outputFormat,omitempty"`
	OutputS3URI       *string `json:"outputS3URI,omitempty"`
	QueryString       *string `json:"queryString,omitempty"`
	WorkGroup         *string `json:"workGroup,omitempty"`
}

type AutoMLCandidate struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	EndTime          *metav1.Time `json:"endTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	ObjectiveStatus  *string      `json:"objectiveStatus,omitempty"`
}

type AutoMLChannel struct {
	CompressionType *string `json:"compressionType,omitempty"`
}

type AutoMLContainerDefinition struct {
	Environment  map[string]*string `json:"environment,omitempty"`
	Image        *string            `json:"image,omitempty"`
	ModelDataURL *string            `json:"modelDataURL,omitempty"`
}

type AutoMLJobSummary struct {
	AutoMLJobARN     *string      `json:"autoMLJobARN,omitempty"`
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	EndTime          *metav1.Time `json:"endTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type AutoMLOutputDataConfig struct {
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type AutoMLS3DataSource struct {
	S3URI *string `json:"s3URI,omitempty"`
}

type AutoMLSecurityConfig struct {
	EnableInterContainerTrafficEncryption *bool      `json:"enableInterContainerTrafficEncryption,omitempty"`
	VolumeKMSKeyID                        *string    `json:"volumeKMSKeyID,omitempty"`
	VPCConfig                             *VPCConfig `json:"vpcConfig,omitempty"`
}

type AutoRollbackConfig struct {
	Alarms []*Alarm `json:"alarms,omitempty"`
}

type BlueGreenUpdatePolicy struct {
	MaximumExecutionTimeoutInSeconds *int64                `json:"maximumExecutionTimeoutInSeconds,omitempty"`
	TerminationWaitInSeconds         *int64                `json:"terminationWaitInSeconds,omitempty"`
	TrafficRoutingConfiguration      *TrafficRoutingConfig `json:"trafficRoutingConfiguration,omitempty"`
}

type CapacitySize struct {
	Type  *string `json:"type_,omitempty"`
	Value *int64  `json:"value,omitempty"`
}

type CaptureContentTypeHeader struct {
	CsvContentTypes  []*string `json:"csvContentTypes,omitempty"`
	JSONContentTypes []*string `json:"jsonContentTypes,omitempty"`
}

type CaptureOption struct {
	CaptureMode *string `json:"captureMode,omitempty"`
}

type CategoricalParameterRange struct {
	Name   *string   `json:"name,omitempty"`
	Values []*string `json:"values,omitempty"`
}

type CategoricalParameterRangeSpecification struct {
	Values []*string `json:"values,omitempty"`
}

type Channel struct {
	ChannelName       *string        `json:"channelName,omitempty"`
	CompressionType   *string        `json:"compressionType,omitempty"`
	ContentType       *string        `json:"contentType,omitempty"`
	DataSource        *DataSource    `json:"dataSource,omitempty"`
	InputMode         *string        `json:"inputMode,omitempty"`
	RecordWrapperType *string        `json:"recordWrapperType,omitempty"`
	ShuffleConfig     *ShuffleConfig `json:"shuffleConfig,omitempty"`
}

type ChannelSpecification struct {
	IsRequired *bool   `json:"isRequired,omitempty"`
	Name       *string `json:"name,omitempty"`
}

type CheckpointConfig struct {
	LocalPath *string `json:"localPath,omitempty"`
	S3URI     *string `json:"s3URI,omitempty"`
}

type CollectionConfiguration struct {
	CollectionName       *string            `json:"collectionName,omitempty"`
	CollectionParameters map[string]*string `json:"collectionParameters,omitempty"`
}

type CompilationJobSummary struct {
	CompilationEndTime   *metav1.Time `json:"compilationEndTime,omitempty"`
	CompilationStartTime *metav1.Time `json:"compilationStartTime,omitempty"`
}

type ContainerDefinition struct {
	ContainerHostname *string            `json:"containerHostname,omitempty"`
	Environment       map[string]*string `json:"environment,omitempty"`
	Image             *string            `json:"image,omitempty"`
	ImageConfig       *ImageConfig       `json:"imageConfig,omitempty"`
	Mode              *string            `json:"mode,omitempty"`
	ModelDataURL      *string            `json:"modelDataURL,omitempty"`
	ModelPackageName  *string            `json:"modelPackageName,omitempty"`
	MultiModelConfig  *MultiModelConfig  `json:"multiModelConfig,omitempty"`
}

type ContextSummary struct {
	ContextName      *string      `json:"contextName,omitempty"`
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type ContinuousParameterRange struct {
	MaxValue    *string `json:"maxValue,omitempty"`
	MinValue    *string `json:"minValue,omitempty"`
	Name        *string `json:"name,omitempty"`
	ScalingType *string `json:"scalingType,omitempty"`
}

type ContinuousParameterRangeSpecification struct {
	MaxValue *string `json:"maxValue,omitempty"`
	MinValue *string `json:"minValue,omitempty"`
}

type DataCaptureConfig struct {
	CaptureContentTypeHeader  *CaptureContentTypeHeader `json:"captureContentTypeHeader,omitempty"`
	CaptureOptions            []*CaptureOption          `json:"captureOptions,omitempty"`
	DestinationS3URI          *string                   `json:"destinationS3URI,omitempty"`
	EnableCapture             *bool                     `json:"enableCapture,omitempty"`
	InitialSamplingPercentage *int64                    `json:"initialSamplingPercentage,omitempty"`
	KMSKeyID                  *string                   `json:"kmsKeyID,omitempty"`
}

type DataCaptureConfigSummary struct {
	CaptureStatus             *string `json:"captureStatus,omitempty"`
	CurrentSamplingPercentage *int64  `json:"currentSamplingPercentage,omitempty"`
	DestinationS3URI          *string `json:"destinationS3URI,omitempty"`
	EnableCapture             *bool   `json:"enableCapture,omitempty"`
	KMSKeyID                  *string `json:"kmsKeyID,omitempty"`
}

type DataProcessing struct {
	InputFilter  *string `json:"inputFilter,omitempty"`
	JoinSource   *string `json:"joinSource,omitempty"`
	OutputFilter *string `json:"outputFilter,omitempty"`
}

type DataQualityAppSpecification struct {
	ContainerEntrypoint             []*string `json:"containerEntrypoint,omitempty"`
	ImageURI                        *string   `json:"imageURI,omitempty"`
	PostAnalyticsProcessorSourceURI *string   `json:"postAnalyticsProcessorSourceURI,omitempty"`
	RecordPreprocessorSourceURI     *string   `json:"recordPreprocessorSourceURI,omitempty"`
}

type DataQualityBaselineConfig struct {
	BaseliningJobName *string `json:"baseliningJobName,omitempty"`
}

type DataSource struct {
	FileSystemDataSource *FileSystemDataSource `json:"fileSystemDataSource,omitempty"`
	S3DataSource         *S3DataSource         `json:"s3DataSource,omitempty"`
}

type DatasetDefinition struct {
	AthenaDatasetDefinition   *AthenaDatasetDefinition   `json:"athenaDatasetDefinition,omitempty"`
	DataDistributionType      *string                    `json:"dataDistributionType,omitempty"`
	InputMode                 *string                    `json:"inputMode,omitempty"`
	LocalPath                 *string                    `json:"localPath,omitempty"`
	RedshiftDatasetDefinition *RedshiftDatasetDefinition `json:"redshiftDatasetDefinition,omitempty"`
}

type DebugHookConfig struct {
	CollectionConfigurations []*CollectionConfiguration `json:"collectionConfigurations,omitempty"`
	HookParameters           map[string]*string         `json:"hookParameters,omitempty"`
	LocalPath                *string                    `json:"localPath,omitempty"`
	S3OutputPath             *string                    `json:"s3OutputPath,omitempty"`
}

type DebugRuleConfiguration struct {
	InstanceType          *string            `json:"instanceType,omitempty"`
	LocalPath             *string            `json:"localPath,omitempty"`
	RuleConfigurationName *string            `json:"ruleConfigurationName,omitempty"`
	RuleEvaluatorImage    *string            `json:"ruleEvaluatorImage,omitempty"`
	RuleParameters        map[string]*string `json:"ruleParameters,omitempty"`
	S3OutputPath          *string            `json:"s3OutputPath,omitempty"`
	VolumeSizeInGB        *int64             `json:"volumeSizeInGB,omitempty"`
}

type DebugRuleEvaluationStatus struct {
	LastModifiedTime      *metav1.Time `json:"lastModifiedTime,omitempty"`
	RuleConfigurationName *string      `json:"ruleConfigurationName,omitempty"`
	RuleEvaluationJobARN  *string      `json:"ruleEvaluationJobARN,omitempty"`
	RuleEvaluationStatus  *string      `json:"ruleEvaluationStatus,omitempty"`
	StatusDetails         *string      `json:"statusDetails,omitempty"`
}

type DeployedImage struct {
	ResolutionTime *metav1.Time `json:"resolutionTime,omitempty"`
	ResolvedImage  *string      `json:"resolvedImage,omitempty"`
	SpecifiedImage *string      `json:"specifiedImage,omitempty"`
}

type DeploymentConfig struct {
	AutoRollbackConfiguration *AutoRollbackConfig    `json:"autoRollbackConfiguration,omitempty"`
	BlueGreenUpdatePolicy     *BlueGreenUpdatePolicy `json:"blueGreenUpdatePolicy,omitempty"`
}

type DesiredWeightAndCapacity struct {
	DesiredInstanceCount *int64   `json:"desiredInstanceCount,omitempty"`
	DesiredWeight        *float64 `json:"desiredWeight,omitempty"`
	VariantName          *string  `json:"variantName,omitempty"`
}

type DeviceFleetSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type DeviceSummary struct {
	LatestHeartbeat  *metav1.Time `json:"latestHeartbeat,omitempty"`
	RegistrationTime *metav1.Time `json:"registrationTime,omitempty"`
}

type EdgeModel struct {
	LatestInference  *metav1.Time `json:"latestInference,omitempty"`
	LatestSampleTime *metav1.Time `json:"latestSampleTime,omitempty"`
}

type EdgeOutputConfig struct {
	KMSKeyID         *string `json:"kmsKeyID,omitempty"`
	S3OutputLocation *string `json:"s3OutputLocation,omitempty"`
}

type EdgePackagingJobSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type EndpointConfigSummary struct {
	CreationTime       *metav1.Time `json:"creationTime,omitempty"`
	EndpointConfigARN  *string      `json:"endpointConfigARN,omitempty"`
	EndpointConfigName *string      `json:"endpointConfigName,omitempty"`
}

type EndpointInput struct {
	EndpointName           *string `json:"endpointName,omitempty"`
	FeaturesAttribute      *string `json:"featuresAttribute,omitempty"`
	InferenceAttribute     *string `json:"inferenceAttribute,omitempty"`
	LocalPath              *string `json:"localPath,omitempty"`
	ProbabilityAttribute   *string `json:"probabilityAttribute,omitempty"`
	S3DataDistributionType *string `json:"s3DataDistributionType,omitempty"`
	S3InputMode            *string `json:"s3InputMode,omitempty"`
}

type EndpointSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	EndpointARN      *string      `json:"endpointARN,omitempty"`
	EndpointName     *string      `json:"endpointName,omitempty"`
	EndpointStatus   *string      `json:"endpointStatus,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type Endpoint_SDK struct {
	CreationTime       *metav1.Time                `json:"creationTime,omitempty"`
	DataCaptureConfig  *DataCaptureConfigSummary   `json:"dataCaptureConfig,omitempty"`
	EndpointARN        *string                     `json:"endpointARN,omitempty"`
	EndpointConfigName *string                     `json:"endpointConfigName,omitempty"`
	EndpointName       *string                     `json:"endpointName,omitempty"`
	EndpointStatus     *string                     `json:"endpointStatus,omitempty"`
	FailureReason      *string                     `json:"failureReason,omitempty"`
	LastModifiedTime   *metav1.Time                `json:"lastModifiedTime,omitempty"`
	ProductionVariants []*ProductionVariantSummary `json:"productionVariants,omitempty"`
	Tags               []*Tag                      `json:"tags,omitempty"`
}

type Experiment struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	DisplayName      *string      `json:"displayName,omitempty"`
	ExperimentName   *string      `json:"experimentName,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	Tags             []*Tag       `json:"tags,omitempty"`
}

type ExperimentConfig struct {
	ExperimentName            *string `json:"experimentName,omitempty"`
	TrialComponentDisplayName *string `json:"trialComponentDisplayName,omitempty"`
	TrialName                 *string `json:"trialName,omitempty"`
}

type ExperimentSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	DisplayName      *string      `json:"displayName,omitempty"`
	ExperimentName   *string      `json:"experimentName,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type FeatureGroup struct {
	FailureReason    *string `json:"failureReason,omitempty"`
	FeatureGroupName *string `json:"featureGroupName,omitempty"`
	RoleARN          *string `json:"roleARN,omitempty"`
	Tags             []*Tag  `json:"tags,omitempty"`
}

type FeatureGroupSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	FeatureGroupName *string      `json:"featureGroupName,omitempty"`
}

type FileSystemDataSource struct {
	DirectoryPath        *string `json:"directoryPath,omitempty"`
	FileSystemAccessMode *string `json:"fileSystemAccessMode,omitempty"`
	FileSystemID         *string `json:"fileSystemID,omitempty"`
	FileSystemType       *string `json:"fileSystemType,omitempty"`
}

type FinalAutoMLJobObjectiveMetric struct {
	Value *float64 `json:"value,omitempty"`
}

type FinalHyperParameterTuningJobObjectiveMetric struct {
	MetricName *string  `json:"metricName,omitempty"`
	Type       *string  `json:"type_,omitempty"`
	Value      *float64 `json:"value,omitempty"`
}

type FlowDefinitionOutputConfig struct {
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type FlowDefinitionSummary struct {
	CreationTime  *metav1.Time `json:"creationTime,omitempty"`
	FailureReason *string      `json:"failureReason,omitempty"`
}

type HumanTaskUiSummary struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
}

type HyperParameterAlgorithmSpecification struct {
	AlgorithmName     *string             `json:"algorithmName,omitempty"`
	MetricDefinitions []*MetricDefinition `json:"metricDefinitions,omitempty"`
	TrainingImage     *string             `json:"trainingImage,omitempty"`
	TrainingInputMode *string             `json:"trainingInputMode,omitempty"`
}

type HyperParameterSpecification struct {
	DefaultValue *string `json:"defaultValue,omitempty"`
	IsRequired   *bool   `json:"isRequired,omitempty"`
	IsTunable    *bool   `json:"isTunable,omitempty"`
}

type HyperParameterTrainingJobDefinition struct {
	AlgorithmSpecification                *HyperParameterAlgorithmSpecification `json:"algorithmSpecification,omitempty"`
	CheckpointConfig                      *CheckpointConfig                     `json:"checkpointConfig,omitempty"`
	DefinitionName                        *string                               `json:"definitionName,omitempty"`
	EnableInterContainerTrafficEncryption *bool                                 `json:"enableInterContainerTrafficEncryption,omitempty"`
	EnableManagedSpotTraining             *bool                                 `json:"enableManagedSpotTraining,omitempty"`
	EnableNetworkIsolation                *bool                                 `json:"enableNetworkIsolation,omitempty"`
	HyperParameterRanges                  *ParameterRanges                      `json:"hyperParameterRanges,omitempty"`
	InputDataConfig                       []*Channel                            `json:"inputDataConfig,omitempty"`
	OutputDataConfig                      *OutputDataConfig                     `json:"outputDataConfig,omitempty"`
	ResourceConfig                        *ResourceConfig                       `json:"resourceConfig,omitempty"`
	RoleARN                               *string                               `json:"roleARN,omitempty"`
	StaticHyperParameters                 map[string]*string                    `json:"staticHyperParameters,omitempty"`
	StoppingCondition                     *StoppingCondition                    `json:"stoppingCondition,omitempty"`
	TuningObjective                       *HyperParameterTuningJobObjective     `json:"tuningObjective,omitempty"`
	VPCConfig                             *VPCConfig                            `json:"vpcConfig,omitempty"`
}

type HyperParameterTrainingJobSummary struct {
	CreationTime                                *metav1.Time                                 `json:"creationTime,omitempty"`
	FailureReason                               *string                                      `json:"failureReason,omitempty"`
	FinalHyperParameterTuningJobObjectiveMetric *FinalHyperParameterTuningJobObjectiveMetric `json:"finalHyperParameterTuningJobObjectiveMetric,omitempty"`
	ObjectiveStatus                             *string                                      `json:"objectiveStatus,omitempty"`
	TrainingEndTime                             *metav1.Time                                 `json:"trainingEndTime,omitempty"`
	TrainingJobARN                              *string                                      `json:"trainingJobARN,omitempty"`
	TrainingJobDefinitionName                   *string                                      `json:"trainingJobDefinitionName,omitempty"`
	TrainingJobName                             *string                                      `json:"trainingJobName,omitempty"`
	TrainingJobStatus                           *string                                      `json:"trainingJobStatus,omitempty"`
	TrainingStartTime                           *metav1.Time                                 `json:"trainingStartTime,omitempty"`
	TunedHyperParameters                        map[string]*string                           `json:"tunedHyperParameters,omitempty"`
	TuningJobName                               *string                                      `json:"tuningJobName,omitempty"`
}

type HyperParameterTuningJobConfig struct {
	HyperParameterTuningJobObjective *HyperParameterTuningJobObjective `json:"hyperParameterTuningJobObjective,omitempty"`
	ParameterRanges                  *ParameterRanges                  `json:"parameterRanges,omitempty"`
	ResourceLimits                   *ResourceLimits                   `json:"resourceLimits,omitempty"`
	Strategy                         *string                           `json:"strategy,omitempty"`
	TrainingJobEarlyStoppingType     *string                           `json:"trainingJobEarlyStoppingType,omitempty"`
	TuningJobCompletionCriteria      *TuningJobCompletionCriteria      `json:"tuningJobCompletionCriteria,omitempty"`
}

type HyperParameterTuningJobObjective struct {
	MetricName *string `json:"metricName,omitempty"`
	Type       *string `json:"type_,omitempty"`
}

type HyperParameterTuningJobSummary struct {
	CreationTime                  *metav1.Time               `json:"creationTime,omitempty"`
	HyperParameterTuningEndTime   *metav1.Time               `json:"hyperParameterTuningEndTime,omitempty"`
	HyperParameterTuningJobARN    *string                    `json:"hyperParameterTuningJobARN,omitempty"`
	HyperParameterTuningJobName   *string                    `json:"hyperParameterTuningJobName,omitempty"`
	HyperParameterTuningJobStatus *string                    `json:"hyperParameterTuningJobStatus,omitempty"`
	LastModifiedTime              *metav1.Time               `json:"lastModifiedTime,omitempty"`
	ObjectiveStatusCounters       *ObjectiveStatusCounters   `json:"objectiveStatusCounters,omitempty"`
	ResourceLimits                *ResourceLimits            `json:"resourceLimits,omitempty"`
	Strategy                      *string                    `json:"strategy,omitempty"`
	TrainingJobStatusCounters     *TrainingJobStatusCounters `json:"trainingJobStatusCounters,omitempty"`
}

type HyperParameterTuningJobWarmStartConfig struct {
	ParentHyperParameterTuningJobs []*ParentHyperParameterTuningJob `json:"parentHyperParameterTuningJobs,omitempty"`
	WarmStartType                  *string                          `json:"warmStartType,omitempty"`
}

type Image struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	FailureReason    *string      `json:"failureReason,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type ImageConfig struct {
	RepositoryAccessMode *string `json:"repositoryAccessMode,omitempty"`
}

type ImageVersion struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	FailureReason    *string      `json:"failureReason,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type InferenceExecutionConfig struct {
	Mode *string `json:"mode,omitempty"`
}

type InputConfig struct {
	S3URI *string `json:"s3URI,omitempty"`
}

type IntegerParameterRange struct {
	MaxValue    *string `json:"maxValue,omitempty"`
	MinValue    *string `json:"minValue,omitempty"`
	Name        *string `json:"name,omitempty"`
	ScalingType *string `json:"scalingType,omitempty"`
}

type IntegerParameterRangeSpecification struct {
	MaxValue *string `json:"maxValue,omitempty"`
	MinValue *string `json:"minValue,omitempty"`
}

type LabelingJobAlgorithmsConfig struct {
	InitialActiveLearningModelARN *string `json:"initialActiveLearningModelARN,omitempty"`
}

type LabelingJobForWorkteamSummary struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
}

type LabelingJobOutput struct {
	FinalActiveLearningModelARN *string `json:"finalActiveLearningModelARN,omitempty"`
	OutputDatasetS3URI          *string `json:"outputDatasetS3URI,omitempty"`
}

type LabelingJobOutputConfig struct {
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type LabelingJobResourceConfig struct {
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
}

type LabelingJobS3DataSource struct {
	ManifestS3URI *string `json:"manifestS3URI,omitempty"`
}

type LabelingJobSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	FailureReason    *string      `json:"failureReason,omitempty"`
	LabelingJobARN   *string      `json:"labelingJobARN,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type MetricData struct {
	MetricName *string      `json:"metricName,omitempty"`
	Timestamp  *metav1.Time `json:"timestamp,omitempty"`
	Value      *float64     `json:"value,omitempty"`
}

type MetricDefinition struct {
	Name  *string `json:"name,omitempty"`
	Regex *string `json:"regex,omitempty"`
}

type MetricsSource struct {
	ContentType *string `json:"contentType,omitempty"`
	S3URI       *string `json:"s3URI,omitempty"`
}

type ModelArtifacts struct {
	S3ModelArtifacts *string `json:"s3ModelArtifacts,omitempty"`
}

type ModelBiasAppSpecification struct {
	ConfigURI *string `json:"configURI,omitempty"`
	ImageURI  *string `json:"imageURI,omitempty"`
}

type ModelBiasBaselineConfig struct {
	BaseliningJobName *string `json:"baseliningJobName,omitempty"`
}

type ModelClientConfig struct {
	InvocationsMaxRetries       *int64 `json:"invocationsMaxRetries,omitempty"`
	InvocationsTimeoutInSeconds *int64 `json:"invocationsTimeoutInSeconds,omitempty"`
}

type ModelExplainabilityAppSpecification struct {
	ConfigURI *string `json:"configURI,omitempty"`
	ImageURI  *string `json:"imageURI,omitempty"`
}

type ModelExplainabilityBaselineConfig struct {
	BaseliningJobName *string `json:"baseliningJobName,omitempty"`
}

type ModelPackage struct {
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	Tags             []*Tag       `json:"tags,omitempty"`
}

type ModelPackageContainerDefinition struct {
	ContainerHostname *string `json:"containerHostname,omitempty"`
	Image             *string `json:"image,omitempty"`
	ModelDataURL      *string `json:"modelDataURL,omitempty"`
}

type ModelPackageGroup struct {
	Tags []*Tag `json:"tags,omitempty"`
}

type ModelPackageStatusItem struct {
	FailureReason *string `json:"failureReason,omitempty"`
}

type ModelPackageValidationSpecification struct {
	ValidationRole *string `json:"validationRole,omitempty"`
}

type ModelQualityAppSpecification struct {
	ContainerEntrypoint             []*string `json:"containerEntrypoint,omitempty"`
	ImageURI                        *string   `json:"imageURI,omitempty"`
	PostAnalyticsProcessorSourceURI *string   `json:"postAnalyticsProcessorSourceURI,omitempty"`
	RecordPreprocessorSourceURI     *string   `json:"recordPreprocessorSourceURI,omitempty"`
}

type ModelQualityBaselineConfig struct {
	BaseliningJobName *string `json:"baseliningJobName,omitempty"`
}

type ModelSummary struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
	ModelARN     *string      `json:"modelARN,omitempty"`
	ModelName    *string      `json:"modelName,omitempty"`
}

type MonitoringAppSpecification struct {
	ContainerEntrypoint             []*string `json:"containerEntrypoint,omitempty"`
	ImageURI                        *string   `json:"imageURI,omitempty"`
	PostAnalyticsProcessorSourceURI *string   `json:"postAnalyticsProcessorSourceURI,omitempty"`
	RecordPreprocessorSourceURI     *string   `json:"recordPreprocessorSourceURI,omitempty"`
}

type MonitoringBaselineConfig struct {
	BaseliningJobName *string `json:"baseliningJobName,omitempty"`
}

type MonitoringClusterConfig struct {
	InstanceCount  *int64  `json:"instanceCount,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
	VolumeSizeInGB *int64  `json:"volumeSizeInGB,omitempty"`
}

type MonitoringConstraintsResource struct {
	S3URI *string `json:"s3URI,omitempty"`
}

type MonitoringExecutionSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	EndpointName     *string      `json:"endpointName,omitempty"`
	FailureReason    *string      `json:"failureReason,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	ProcessingJobARN *string      `json:"processingJobARN,omitempty"`
	ScheduledTime    *metav1.Time `json:"scheduledTime,omitempty"`
}

type MonitoringJobDefinition struct {
	NetworkConfig *NetworkConfig `json:"networkConfig,omitempty"`
	RoleARN       *string        `json:"roleARN,omitempty"`
}

type MonitoringJobDefinitionSummary struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
	EndpointName *string      `json:"endpointName,omitempty"`
}

type MonitoringNetworkConfig struct {
	EnableInterContainerTrafficEncryption *bool      `json:"enableInterContainerTrafficEncryption,omitempty"`
	EnableNetworkIsolation                *bool      `json:"enableNetworkIsolation,omitempty"`
	VPCConfig                             *VPCConfig `json:"vpcConfig,omitempty"`
}

type MonitoringOutputConfig struct {
	KMSKeyID *string `json:"kmsKeyID,omitempty"`
}

type MonitoringS3Output struct {
	LocalPath    *string `json:"localPath,omitempty"`
	S3UploadMode *string `json:"s3UploadMode,omitempty"`
}

type MonitoringSchedule struct {
	CreationTime          *metav1.Time `json:"creationTime,omitempty"`
	EndpointName          *string      `json:"endpointName,omitempty"`
	FailureReason         *string      `json:"failureReason,omitempty"`
	LastModifiedTime      *metav1.Time `json:"lastModifiedTime,omitempty"`
	MonitoringScheduleARN *string      `json:"monitoringScheduleARN,omitempty"`
	Tags                  []*Tag       `json:"tags,omitempty"`
}

type MonitoringScheduleSummary struct {
	CreationTime          *metav1.Time `json:"creationTime,omitempty"`
	EndpointName          *string      `json:"endpointName,omitempty"`
	LastModifiedTime      *metav1.Time `json:"lastModifiedTime,omitempty"`
	MonitoringScheduleARN *string      `json:"monitoringScheduleARN,omitempty"`
}

type MonitoringStatisticsResource struct {
	S3URI *string `json:"s3URI,omitempty"`
}

type MultiModelConfig struct {
	ModelCacheSetting *string `json:"modelCacheSetting,omitempty"`
}

type NetworkConfig struct {
	EnableInterContainerTrafficEncryption *bool      `json:"enableInterContainerTrafficEncryption,omitempty"`
	EnableNetworkIsolation                *bool      `json:"enableNetworkIsolation,omitempty"`
	VPCConfig                             *VPCConfig `json:"vpcConfig,omitempty"`
}

type ObjectiveStatusCounters struct {
	Failed    *int64 `json:"failed,omitempty"`
	Pending   *int64 `json:"pending,omitempty"`
	Succeeded *int64 `json:"succeeded,omitempty"`
}

type OfflineStoreConfig struct {
	DisableGlueTableCreation *bool `json:"disableGlueTableCreation,omitempty"`
}

type OnlineStoreConfig struct {
	EnableOnlineStore *bool `json:"enableOnlineStore,omitempty"`
}

type OnlineStoreSecurityConfig struct {
	KMSKeyID *string `json:"kmsKeyID,omitempty"`
}

type OutputConfig struct {
	KMSKeyID         *string `json:"kmsKeyID,omitempty"`
	S3OutputLocation *string `json:"s3OutputLocation,omitempty"`
}

type OutputDataConfig struct {
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type ParameterRanges struct {
	CategoricalParameterRanges []*CategoricalParameterRange `json:"categoricalParameterRanges,omitempty"`
	ContinuousParameterRanges  []*ContinuousParameterRange  `json:"continuousParameterRanges,omitempty"`
	IntegerParameterRanges     []*IntegerParameterRange     `json:"integerParameterRanges,omitempty"`
}

type Parent struct {
	ExperimentName *string `json:"experimentName,omitempty"`
	TrialName      *string `json:"trialName,omitempty"`
}

type ParentHyperParameterTuningJob struct {
	HyperParameterTuningJobName *string `json:"hyperParameterTuningJobName,omitempty"`
}

type Pipeline struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	LastRunTime      *metav1.Time `json:"lastRunTime,omitempty"`
	RoleARN          *string      `json:"roleARN,omitempty"`
	Tags             []*Tag       `json:"tags,omitempty"`
}

type PipelineExecution struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
}

type PipelineExecutionStep struct {
	EndTime       *metav1.Time `json:"endTime,omitempty"`
	FailureReason *string      `json:"failureReason,omitempty"`
	StartTime     *metav1.Time `json:"startTime,omitempty"`
}

type PipelineExecutionSummary struct {
	StartTime *metav1.Time `json:"startTime,omitempty"`
}

type PipelineSummary struct {
	CreationTime      *metav1.Time `json:"creationTime,omitempty"`
	LastExecutionTime *metav1.Time `json:"lastExecutionTime,omitempty"`
	LastModifiedTime  *metav1.Time `json:"lastModifiedTime,omitempty"`
	RoleARN           *string      `json:"roleARN,omitempty"`
}

type ProcessingClusterConfig struct {
	InstanceCount  *int64  `json:"instanceCount,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
	VolumeSizeInGB *int64  `json:"volumeSizeInGB,omitempty"`
}

type ProcessingFeatureStoreOutput struct {
	FeatureGroupName *string `json:"featureGroupName,omitempty"`
}

type ProcessingInput struct {
	AppManaged        *bool              `json:"appManaged,omitempty"`
	DatasetDefinition *DatasetDefinition `json:"datasetDefinition,omitempty"`
	InputName         *string            `json:"inputName,omitempty"`
	S3Input           *ProcessingS3Input `json:"s3Input,omitempty"`
}

type ProcessingJobStepMetadata struct {
	ARN *string `json:"arn,omitempty"`
}

type ProcessingJobSummary struct {
	CreationTime        *metav1.Time `json:"creationTime,omitempty"`
	ExitMessage         *string      `json:"exitMessage,omitempty"`
	FailureReason       *string      `json:"failureReason,omitempty"`
	LastModifiedTime    *metav1.Time `json:"lastModifiedTime,omitempty"`
	ProcessingEndTime   *metav1.Time `json:"processingEndTime,omitempty"`
	ProcessingJobARN    *string      `json:"processingJobARN,omitempty"`
	ProcessingJobName   *string      `json:"processingJobName,omitempty"`
	ProcessingJobStatus *string      `json:"processingJobStatus,omitempty"`
}

type ProcessingJob_SDK struct {
	AppSpecification       *AppSpecification            `json:"appSpecification,omitempty"`
	AutoMLJobARN           *string                      `json:"autoMLJobARN,omitempty"`
	CreationTime           *metav1.Time                 `json:"creationTime,omitempty"`
	Environment            map[string]*string           `json:"environment,omitempty"`
	ExitMessage            *string                      `json:"exitMessage,omitempty"`
	ExperimentConfig       *ExperimentConfig            `json:"experimentConfig,omitempty"`
	FailureReason          *string                      `json:"failureReason,omitempty"`
	LastModifiedTime       *metav1.Time                 `json:"lastModifiedTime,omitempty"`
	MonitoringScheduleARN  *string                      `json:"monitoringScheduleARN,omitempty"`
	NetworkConfig          *NetworkConfig               `json:"networkConfig,omitempty"`
	ProcessingEndTime      *metav1.Time                 `json:"processingEndTime,omitempty"`
	ProcessingInputs       []*ProcessingInput           `json:"processingInputs,omitempty"`
	ProcessingJobARN       *string                      `json:"processingJobARN,omitempty"`
	ProcessingJobName      *string                      `json:"processingJobName,omitempty"`
	ProcessingJobStatus    *string                      `json:"processingJobStatus,omitempty"`
	ProcessingOutputConfig *ProcessingOutputConfig      `json:"processingOutputConfig,omitempty"`
	ProcessingResources    *ProcessingResources         `json:"processingResources,omitempty"`
	ProcessingStartTime    *metav1.Time                 `json:"processingStartTime,omitempty"`
	RoleARN                *string                      `json:"roleARN,omitempty"`
	StoppingCondition      *ProcessingStoppingCondition `json:"stoppingCondition,omitempty"`
	Tags                   []*Tag                       `json:"tags,omitempty"`
	TrainingJobARN         *string                      `json:"trainingJobARN,omitempty"`
}

type ProcessingOutput struct {
	AppManaged         *bool                         `json:"appManaged,omitempty"`
	FeatureStoreOutput *ProcessingFeatureStoreOutput `json:"featureStoreOutput,omitempty"`
	OutputName         *string                       `json:"outputName,omitempty"`
	S3Output           *ProcessingS3Output           `json:"s3Output,omitempty"`
}

type ProcessingOutputConfig struct {
	KMSKeyID *string             `json:"kmsKeyID,omitempty"`
	Outputs  []*ProcessingOutput `json:"outputs,omitempty"`
}

type ProcessingResources struct {
	ClusterConfig *ProcessingClusterConfig `json:"clusterConfig,omitempty"`
}

type ProcessingS3Input struct {
	LocalPath              *string `json:"localPath,omitempty"`
	S3CompressionType      *string `json:"s3CompressionType,omitempty"`
	S3DataDistributionType *string `json:"s3DataDistributionType,omitempty"`
	S3DataType             *string `json:"s3DataType,omitempty"`
	S3InputMode            *string `json:"s3InputMode,omitempty"`
	S3URI                  *string `json:"s3URI,omitempty"`
}

type ProcessingS3Output struct {
	LocalPath    *string `json:"localPath,omitempty"`
	S3UploadMode *string `json:"s3UploadMode,omitempty"`
	S3URI        *string `json:"s3URI,omitempty"`
}

type ProcessingStoppingCondition struct {
	MaxRuntimeInSeconds *int64 `json:"maxRuntimeInSeconds,omitempty"`
}

type ProductionVariant struct {
	AcceleratorType      *string                          `json:"acceleratorType,omitempty"`
	CoreDumpConfig       *ProductionVariantCoreDumpConfig `json:"coreDumpConfig,omitempty"`
	InitialInstanceCount *int64                           `json:"initialInstanceCount,omitempty"`
	InitialVariantWeight *float64                         `json:"initialVariantWeight,omitempty"`
	InstanceType         *string                          `json:"instanceType,omitempty"`
	ModelName            *string                          `json:"modelName,omitempty"`
	VariantName          *string                          `json:"variantName,omitempty"`
}

type ProductionVariantCoreDumpConfig struct {
	DestinationS3URI *string `json:"destinationS3URI,omitempty"`
	KMSKeyID         *string `json:"kmsKeyID,omitempty"`
}

type ProductionVariantSummary struct {
	CurrentInstanceCount *int64           `json:"currentInstanceCount,omitempty"`
	CurrentWeight        *float64         `json:"currentWeight,omitempty"`
	DeployedImages       []*DeployedImage `json:"deployedImages,omitempty"`
	DesiredInstanceCount *int64           `json:"desiredInstanceCount,omitempty"`
	DesiredWeight        *float64         `json:"desiredWeight,omitempty"`
	VariantName          *string          `json:"variantName,omitempty"`
}

type ProfilerConfig struct {
	ProfilingIntervalInMilliseconds *int64             `json:"profilingIntervalInMilliseconds,omitempty"`
	ProfilingParameters             map[string]*string `json:"profilingParameters,omitempty"`
	S3OutputPath                    *string            `json:"s3OutputPath,omitempty"`
}

type ProfilerConfigForUpdate struct {
	ProfilingIntervalInMilliseconds *int64             `json:"profilingIntervalInMilliseconds,omitempty"`
	ProfilingParameters             map[string]*string `json:"profilingParameters,omitempty"`
	S3OutputPath                    *string            `json:"s3OutputPath,omitempty"`
}

type ProfilerRuleConfiguration struct {
	InstanceType          *string            `json:"instanceType,omitempty"`
	LocalPath             *string            `json:"localPath,omitempty"`
	RuleConfigurationName *string            `json:"ruleConfigurationName,omitempty"`
	RuleEvaluatorImage    *string            `json:"ruleEvaluatorImage,omitempty"`
	RuleParameters        map[string]*string `json:"ruleParameters,omitempty"`
	S3OutputPath          *string            `json:"s3OutputPath,omitempty"`
	VolumeSizeInGB        *int64             `json:"volumeSizeInGB,omitempty"`
}

type ProfilerRuleEvaluationStatus struct {
	LastModifiedTime      *metav1.Time `json:"lastModifiedTime,omitempty"`
	RuleConfigurationName *string      `json:"ruleConfigurationName,omitempty"`
	RuleEvaluationJobARN  *string      `json:"ruleEvaluationJobARN,omitempty"`
	RuleEvaluationStatus  *string      `json:"ruleEvaluationStatus,omitempty"`
	StatusDetails         *string      `json:"statusDetails,omitempty"`
}

type ProjectSummary struct {
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
}

type RedshiftDatasetDefinition struct {
	ClusterID         *string `json:"clusterID,omitempty"`
	ClusterRoleARN    *string `json:"clusterRoleARN,omitempty"`
	Database          *string `json:"database,omitempty"`
	DBUser            *string `json:"dbUser,omitempty"`
	KMSKeyID          *string `json:"kmsKeyID,omitempty"`
	OutputCompression *string `json:"outputCompression,omitempty"`
	OutputFormat      *string `json:"outputFormat,omitempty"`
	OutputS3URI       *string `json:"outputS3URI,omitempty"`
	QueryString       *string `json:"queryString,omitempty"`
}

type RenderingError struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

type ResourceConfig struct {
	InstanceCount  *int64  `json:"instanceCount,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
	VolumeSizeInGB *int64  `json:"volumeSizeInGB,omitempty"`
}

type ResourceLimits struct {
	MaxNumberOfTrainingJobs *int64 `json:"maxNumberOfTrainingJobs,omitempty"`
	MaxParallelTrainingJobs *int64 `json:"maxParallelTrainingJobs,omitempty"`
}

type S3DataSource struct {
	AttributeNames         []*string `json:"attributeNames,omitempty"`
	S3DataDistributionType *string   `json:"s3DataDistributionType,omitempty"`
	S3DataType             *string   `json:"s3DataType,omitempty"`
	S3URI                  *string   `json:"s3URI,omitempty"`
}

type S3StorageConfig struct {
	KMSKeyID            *string `json:"kmsKeyID,omitempty"`
	ResolvedOutputS3URI *string `json:"resolvedOutputS3URI,omitempty"`
	S3URI               *string `json:"s3URI,omitempty"`
}

type SecondaryStatusTransition struct {
	EndTime       *metav1.Time `json:"endTime,omitempty"`
	StartTime     *metav1.Time `json:"startTime,omitempty"`
	Status        *string      `json:"status,omitempty"`
	StatusMessage *string      `json:"statusMessage,omitempty"`
}

type SharingSettings struct {
	S3KMSKeyID   *string `json:"s3KMSKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type ShuffleConfig struct {
	Seed *int64 `json:"seed,omitempty"`
}

type SourceAlgorithm struct {
	AlgorithmName *string `json:"algorithmName,omitempty"`
	ModelDataURL  *string `json:"modelDataURL,omitempty"`
}

type StoppingCondition struct {
	MaxRuntimeInSeconds  *int64 `json:"maxRuntimeInSeconds,omitempty"`
	MaxWaitTimeInSeconds *int64 `json:"maxWaitTimeInSeconds,omitempty"`
}

type SubscribedWorkteam struct {
	ListingID  *string `json:"listingID,omitempty"`
	SellerName *string `json:"sellerName,omitempty"`
}

type Tag struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

type TensorBoardOutputConfig struct {
	LocalPath    *string `json:"localPath,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type TrafficRoutingConfig struct {
	CanarySize            *CapacitySize `json:"canarySize,omitempty"`
	Type                  *string       `json:"type_,omitempty"`
	WaitIntervalInSeconds *int64        `json:"waitIntervalInSeconds,omitempty"`
}

type TrainingJobDefinition struct {
	HyperParameters   map[string]*string `json:"hyperParameters,omitempty"`
	InputDataConfig   []*Channel         `json:"inputDataConfig,omitempty"`
	OutputDataConfig  *OutputDataConfig  `json:"outputDataConfig,omitempty"`
	ResourceConfig    *ResourceConfig    `json:"resourceConfig,omitempty"`
	StoppingCondition *StoppingCondition `json:"stoppingCondition,omitempty"`
	TrainingInputMode *string            `json:"trainingInputMode,omitempty"`
}

type TrainingJobStatusCounters struct {
	Completed         *int64 `json:"completed,omitempty"`
	InProgress        *int64 `json:"inProgress,omitempty"`
	NonRetryableError *int64 `json:"nonRetryableError,omitempty"`
	RetryableError    *int64 `json:"retryableError,omitempty"`
	Stopped           *int64 `json:"stopped,omitempty"`
}

type TrainingJobStepMetadata struct {
	ARN *string `json:"arn,omitempty"`
}

type TrainingJobSummary struct {
	CreationTime      *metav1.Time `json:"creationTime,omitempty"`
	LastModifiedTime  *metav1.Time `json:"lastModifiedTime,omitempty"`
	TrainingEndTime   *metav1.Time `json:"trainingEndTime,omitempty"`
	TrainingJobARN    *string      `json:"trainingJobARN,omitempty"`
	TrainingJobName   *string      `json:"trainingJobName,omitempty"`
	TrainingJobStatus *string      `json:"trainingJobStatus,omitempty"`
}

type TrainingJob_SDK struct {
	AlgorithmSpecification                *AlgorithmSpecification      `json:"algorithmSpecification,omitempty"`
	AutoMLJobARN                          *string                      `json:"autoMLJobARN,omitempty"`
	BillableTimeInSeconds                 *int64                       `json:"billableTimeInSeconds,omitempty"`
	CheckpointConfig                      *CheckpointConfig            `json:"checkpointConfig,omitempty"`
	CreationTime                          *metav1.Time                 `json:"creationTime,omitempty"`
	DebugHookConfig                       *DebugHookConfig             `json:"debugHookConfig,omitempty"`
	DebugRuleConfigurations               []*DebugRuleConfiguration    `json:"debugRuleConfigurations,omitempty"`
	DebugRuleEvaluationStatuses           []*DebugRuleEvaluationStatus `json:"debugRuleEvaluationStatuses,omitempty"`
	EnableInterContainerTrafficEncryption *bool                        `json:"enableInterContainerTrafficEncryption,omitempty"`
	EnableManagedSpotTraining             *bool                        `json:"enableManagedSpotTraining,omitempty"`
	EnableNetworkIsolation                *bool                        `json:"enableNetworkIsolation,omitempty"`
	ExperimentConfig                      *ExperimentConfig            `json:"experimentConfig,omitempty"`
	FailureReason                         *string                      `json:"failureReason,omitempty"`
	FinalMetricDataList                   []*MetricData                `json:"finalMetricDataList,omitempty"`
	HyperParameters                       map[string]*string           `json:"hyperParameters,omitempty"`
	InputDataConfig                       []*Channel                   `json:"inputDataConfig,omitempty"`
	LabelingJobARN                        *string                      `json:"labelingJobARN,omitempty"`
	LastModifiedTime                      *metav1.Time                 `json:"lastModifiedTime,omitempty"`
	ModelArtifacts                        *ModelArtifacts              `json:"modelArtifacts,omitempty"`
	OutputDataConfig                      *OutputDataConfig            `json:"outputDataConfig,omitempty"`
	ResourceConfig                        *ResourceConfig              `json:"resourceConfig,omitempty"`
	RoleARN                               *string                      `json:"roleARN,omitempty"`
	SecondaryStatus                       *string                      `json:"secondaryStatus,omitempty"`
	SecondaryStatusTransitions            []*SecondaryStatusTransition `json:"secondaryStatusTransitions,omitempty"`
	StoppingCondition                     *StoppingCondition           `json:"stoppingCondition,omitempty"`
	Tags                                  []*Tag                       `json:"tags,omitempty"`
	TensorBoardOutputConfig               *TensorBoardOutputConfig     `json:"tensorBoardOutputConfig,omitempty"`
	TrainingEndTime                       *metav1.Time                 `json:"trainingEndTime,omitempty"`
	TrainingJobARN                        *string                      `json:"trainingJobARN,omitempty"`
	TrainingJobName                       *string                      `json:"trainingJobName,omitempty"`
	TrainingJobStatus                     *string                      `json:"trainingJobStatus,omitempty"`
	TrainingStartTime                     *metav1.Time                 `json:"trainingStartTime,omitempty"`
	TrainingTimeInSeconds                 *int64                       `json:"trainingTimeInSeconds,omitempty"`
	TuningJobARN                          *string                      `json:"tuningJobARN,omitempty"`
	VPCConfig                             *VPCConfig                   `json:"vpcConfig,omitempty"`
}

type TrainingSpecification struct {
	MetricDefinitions           []*MetricDefinition `json:"metricDefinitions,omitempty"`
	SupportsDistributedTraining *bool               `json:"supportsDistributedTraining,omitempty"`
	TrainingImage               *string             `json:"trainingImage,omitempty"`
}

type TransformDataSource struct {
	S3DataSource *TransformS3DataSource `json:"s3DataSource,omitempty"`
}

type TransformInput struct {
	CompressionType *string              `json:"compressionType,omitempty"`
	ContentType     *string              `json:"contentType,omitempty"`
	DataSource      *TransformDataSource `json:"dataSource,omitempty"`
	SplitType       *string              `json:"splitType,omitempty"`
}

type TransformJobDefinition struct {
	BatchStrategy           *string             `json:"batchStrategy,omitempty"`
	Environment             map[string]*string  `json:"environment,omitempty"`
	MaxConcurrentTransforms *int64              `json:"maxConcurrentTransforms,omitempty"`
	MaxPayloadInMB          *int64              `json:"maxPayloadInMB,omitempty"`
	TransformInput          *TransformInput     `json:"transformInput,omitempty"`
	TransformOutput         *TransformOutput    `json:"transformOutput,omitempty"`
	TransformResources      *TransformResources `json:"transformResources,omitempty"`
}

type TransformJobStepMetadata struct {
	ARN *string `json:"arn,omitempty"`
}

type TransformJobSummary struct {
	CreationTime       *metav1.Time `json:"creationTime,omitempty"`
	FailureReason      *string      `json:"failureReason,omitempty"`
	LastModifiedTime   *metav1.Time `json:"lastModifiedTime,omitempty"`
	TransformEndTime   *metav1.Time `json:"transformEndTime,omitempty"`
	TransformJobARN    *string      `json:"transformJobARN,omitempty"`
	TransformJobName   *string      `json:"transformJobName,omitempty"`
	TransformJobStatus *string      `json:"transformJobStatus,omitempty"`
}

type TransformJob_SDK struct {
	AutoMLJobARN            *string             `json:"autoMLJobARN,omitempty"`
	BatchStrategy           *string             `json:"batchStrategy,omitempty"`
	CreationTime            *metav1.Time        `json:"creationTime,omitempty"`
	DataProcessing          *DataProcessing     `json:"dataProcessing,omitempty"`
	Environment             map[string]*string  `json:"environment,omitempty"`
	ExperimentConfig        *ExperimentConfig   `json:"experimentConfig,omitempty"`
	FailureReason           *string             `json:"failureReason,omitempty"`
	LabelingJobARN          *string             `json:"labelingJobARN,omitempty"`
	MaxConcurrentTransforms *int64              `json:"maxConcurrentTransforms,omitempty"`
	MaxPayloadInMB          *int64              `json:"maxPayloadInMB,omitempty"`
	ModelClientConfig       *ModelClientConfig  `json:"modelClientConfig,omitempty"`
	ModelName               *string             `json:"modelName,omitempty"`
	Tags                    []*Tag              `json:"tags,omitempty"`
	TransformEndTime        *metav1.Time        `json:"transformEndTime,omitempty"`
	TransformInput          *TransformInput     `json:"transformInput,omitempty"`
	TransformJobARN         *string             `json:"transformJobARN,omitempty"`
	TransformJobName        *string             `json:"transformJobName,omitempty"`
	TransformJobStatus      *string             `json:"transformJobStatus,omitempty"`
	TransformOutput         *TransformOutput    `json:"transformOutput,omitempty"`
	TransformResources      *TransformResources `json:"transformResources,omitempty"`
	TransformStartTime      *metav1.Time        `json:"transformStartTime,omitempty"`
}

type TransformOutput struct {
	Accept       *string `json:"accept,omitempty"`
	AssembleWith *string `json:"assembleWith,omitempty"`
	KMSKeyID     *string `json:"kmsKeyID,omitempty"`
	S3OutputPath *string `json:"s3OutputPath,omitempty"`
}

type TransformResources struct {
	InstanceCount  *int64  `json:"instanceCount,omitempty"`
	InstanceType   *string `json:"instanceType,omitempty"`
	VolumeKMSKeyID *string `json:"volumeKMSKeyID,omitempty"`
}

type TransformS3DataSource struct {
	S3DataType *string `json:"s3DataType,omitempty"`
	S3URI      *string `json:"s3URI,omitempty"`
}

type Trial struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	DisplayName      *string      `json:"displayName,omitempty"`
	ExperimentName   *string      `json:"experimentName,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	Tags             []*Tag       `json:"tags,omitempty"`
	TrialName        *string      `json:"trialName,omitempty"`
}

type TrialComponent struct {
	CreationTime       *metav1.Time `json:"creationTime,omitempty"`
	DisplayName        *string      `json:"displayName,omitempty"`
	EndTime            *metav1.Time `json:"endTime,omitempty"`
	LastModifiedTime   *metav1.Time `json:"lastModifiedTime,omitempty"`
	StartTime          *metav1.Time `json:"startTime,omitempty"`
	Tags               []*Tag       `json:"tags,omitempty"`
	TrialComponentName *string      `json:"trialComponentName,omitempty"`
}

type TrialComponentMetricSummary struct {
	MetricName *string      `json:"metricName,omitempty"`
	TimeStamp  *metav1.Time `json:"timeStamp,omitempty"`
}

type TrialComponentSimpleSummary struct {
	CreationTime       *metav1.Time `json:"creationTime,omitempty"`
	TrialComponentName *string      `json:"trialComponentName,omitempty"`
}

type TrialComponentSummary struct {
	CreationTime       *metav1.Time `json:"creationTime,omitempty"`
	DisplayName        *string      `json:"displayName,omitempty"`
	EndTime            *metav1.Time `json:"endTime,omitempty"`
	LastModifiedTime   *metav1.Time `json:"lastModifiedTime,omitempty"`
	StartTime          *metav1.Time `json:"startTime,omitempty"`
	TrialComponentName *string      `json:"trialComponentName,omitempty"`
}

type TrialSummary struct {
	CreationTime     *metav1.Time `json:"creationTime,omitempty"`
	DisplayName      *string      `json:"displayName,omitempty"`
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	TrialName        *string      `json:"trialName,omitempty"`
}

type TuningJobCompletionCriteria struct {
	TargetObjectiveMetricValue *float64 `json:"targetObjectiveMetricValue,omitempty"`
}

type UiConfig struct {
	UiTemplateS3URI *string `json:"uiTemplateS3URI,omitempty"`
}

type UserContext struct {
	DomainID        *string `json:"domainID,omitempty"`
	UserProfileARN  *string `json:"userProfileARN,omitempty"`
	UserProfileName *string `json:"userProfileName,omitempty"`
}

type UserSettings struct {
	ExecutionRole *string `json:"executionRole,omitempty"`
}

type VPCConfig struct {
	SecurityGroupIDs []*string `json:"securityGroupIDs,omitempty"`
	Subnets          []*string `json:"subnets,omitempty"`
}

type VariantProperty struct {
	VariantPropertyType *string `json:"variantPropertyType,omitempty"`
}

type Workforce struct {
	CreateDate      *metav1.Time `json:"createDate,omitempty"`
	LastUpdatedDate *metav1.Time `json:"lastUpdatedDate,omitempty"`
	SubDomain       *string      `json:"subDomain,omitempty"`
}

type Workteam struct {
	CreateDate      *metav1.Time `json:"createDate,omitempty"`
	LastUpdatedDate *metav1.Time `json:"lastUpdatedDate,omitempty"`
	SubDomain       *string      `json:"subDomain,omitempty"`
}
