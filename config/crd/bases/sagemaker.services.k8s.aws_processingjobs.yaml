
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
  creationTimestamp: null
  name: processingjobs.sagemaker.services.k8s.aws
spec:
  group: sagemaker.services.k8s.aws
  names:
    kind: ProcessingJob
    listKind: ProcessingJobList
    plural: processingjobs
    singular: processingjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.failureReason
      name: FailureReason
      type: string
    - jsonPath: .status.processingJobStatus
      name: ProcessingJobStatus
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProcessingJob is the Schema for the ProcessingJobs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProcessingJobSpec defines the desired state of ProcessingJob
            properties:
              appSpecification:
                description: Configures the processing job to run a specified Docker
                  container image.
                properties:
                  containerArguments:
                    items:
                      type: string
                    type: array
                  containerEntrypoint:
                    items:
                      type: string
                    type: array
                  imageURI:
                    type: string
                type: object
              environment:
                additionalProperties:
                  type: string
                description: The environment variables to set in the Docker container.
                  Up to 100 key and values entries in the map are supported.
                type: object
              experimentConfig:
                properties:
                  experimentName:
                    type: string
                  trialComponentDisplayName:
                    type: string
                  trialName:
                    type: string
                type: object
              networkConfig:
                description: Networking options for a processing job, such as whether
                  to allow inbound and outbound network calls to and from processing
                  containers, and the VPC subnets and security groups to use for VPC-enabled
                  processing jobs.
                properties:
                  enableInterContainerTrafficEncryption:
                    type: boolean
                  enableNetworkIsolation:
                    type: boolean
                  vpcConfig:
                    properties:
                      securityGroupIDs:
                        items:
                          type: string
                        type: array
                      subnets:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              processingInputs:
                description: An array of inputs configuring the data to download into
                  the processing container.
                items:
                  properties:
                    appManaged:
                      type: boolean
                    datasetDefinition:
                      properties:
                        athenaDatasetDefinition:
                          properties:
                            catalog:
                              type: string
                            database:
                              type: string
                            kmsKeyID:
                              type: string
                            outputCompression:
                              type: string
                            outputFormat:
                              type: string
                            outputS3URI:
                              type: string
                            queryString:
                              type: string
                            workGroup:
                              type: string
                          type: object
                        dataDistributionType:
                          type: string
                        inputMode:
                          type: string
                        localPath:
                          type: string
                        redshiftDatasetDefinition:
                          properties:
                            clusterID:
                              type: string
                            clusterRoleARN:
                              type: string
                            database:
                              type: string
                            dbUser:
                              type: string
                            kmsKeyID:
                              type: string
                            outputCompression:
                              type: string
                            outputFormat:
                              type: string
                            outputS3URI:
                              type: string
                            queryString:
                              type: string
                          type: object
                      type: object
                    inputName:
                      type: string
                    s3Input:
                      properties:
                        localPath:
                          type: string
                        s3CompressionType:
                          type: string
                        s3DataDistributionType:
                          type: string
                        s3DataType:
                          type: string
                        s3InputMode:
                          type: string
                        s3URI:
                          type: string
                      type: object
                  type: object
                type: array
              processingJobName:
                description: The name of the processing job. The name must be unique
                  within an AWS Region in the AWS account.
                type: string
              processingOutputConfig:
                description: Output configuration for the processing job.
                properties:
                  kmsKeyID:
                    type: string
                  outputs:
                    items:
                      properties:
                        appManaged:
                          type: boolean
                        featureStoreOutput:
                          properties:
                            featureGroupName:
                              type: string
                          type: object
                        outputName:
                          type: string
                        s3Output:
                          properties:
                            localPath:
                              type: string
                            s3URI:
                              type: string
                            s3UploadMode:
                              type: string
                          type: object
                      type: object
                    type: array
                type: object
              processingResources:
                description: Identifies the resources, ML compute instances, and ML
                  storage volumes to deploy for a processing job. In distributed training,
                  you specify more than one instance.
                properties:
                  clusterConfig:
                    properties:
                      instanceCount:
                        format: int64
                        type: integer
                      instanceType:
                        type: string
                      volumeKMSKeyID:
                        type: string
                      volumeSizeInGB:
                        format: int64
                        type: integer
                    type: object
                type: object
              roleARN:
                description: The Amazon Resource Name (ARN) of an IAM role that Amazon
                  SageMaker can assume to perform tasks on your behalf.
                type: string
              stoppingCondition:
                description: The time limit for how long the processing job is allowed
                  to run.
                properties:
                  maxRuntimeInSeconds:
                    format: int64
                    type: integer
                type: object
            required:
            - appSpecification
            - processingJobName
            - processingResources
            - roleARN
            type: object
          status:
            description: ProcessingJobStatus defines the observed state of ProcessingJob
            properties:
              ackResourceMetadata:
                description: All CRs managed by ACK have a common `Status.ACKResourceMetadata`
                  member that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: 'ARN is the Amazon Resource Name for the resource.
                      This is a globally-unique identifier and is set only by the
                      ACK service controller once the controller has orchestrated
                      the creation of the resource OR when it has verified that an
                      "adopted" resource (a resource where the ARN annotation was
                      set by the Kubernetes user on the CR) exists and matches the
                      supplied CR''s Spec field values. TODO(vijat@): Find a better
                      strategy for resources that do not have ARN in CreateOutputResponse
                      https://github.com/aws/aws-controllers-k8s/issues/270'
                    type: string
                  ownerAccountID:
                    description: OwnerAccountID is the AWS Account ID of the account
                      that owns the backend AWS service API resource.
                    type: string
                required:
                - ownerAccountID
                type: object
              conditions:
                description: All CRS managed by ACK have a common `Status.Conditions`
                  member that contains a collection of `ackv1alpha1.Condition` objects
                  that describe the various terminal states of the CR and its backend
                  AWS service API resource
                items:
                  description: Condition is the common struct used by all CRDs managed
                    by ACK service controllers to indicate terminal states  of the
                    CR and its backend AWS service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureReason:
                description: A string, up to one KB in size, that contains the reason
                  a processing job failed, if it failed.
                type: string
              processingJobStatus:
                description: Provides the status of a processing job.
                type: string
            required:
            - ackResourceMetadata
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
